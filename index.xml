<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>记录每个瞬间</title>
    <link>https://code0xff.org/</link>
    <description>Recent content on 记录每个瞬间</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Thu, 01 Jun 2023 09:11:07 +0800</lastBuildDate><atom:link href="https://code0xff.org/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>BitWeaving: Fast Scans for Main Memory Data Processing</title>
      <link>https://code0xff.org/post/2023/06/bitweaving/</link>
      <pubDate>Thu, 01 Jun 2023 09:11:07 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2023/06/bitweaving/</guid>
      <description>基于主内存数据库的 scan 优化，提出的技术：BitWeaving，又分为两种：BitWeaving/V 和 BitWeaving/H；BW/H 相当于是bit 级别的水平分布，将列的数据水平的分布到不同segment 中，通过亦或、以及各种位运算技术，实现了 =、!=、&amp;lt;、&amp;lt;= 的比较操作，比较完之后，每个process word 分隔符bit就会被设置为 1 或者0，然后将上下四组分别做不同的位移在 or，就能得到最终结果；BW/V 实现bit 级别的列存储，一列数据将每个数据的第一个bit存到 process word v1中，第二列存到 v2中，按照这种分布就可以实现早期裁剪，SIMD 再进一步优化，他的scan很快，但是查找需要跨多个processor word，相当于是垂直的从左往右计算，性能会 BW/H要差；而对于 VBP，其真实数据布局可以再优化，比如原先 9个processor word 一个segment，变成一个segment 3个 bit group，每个bit group 3个 processor word，这样做 cut-off的时候可以不用再加载斗鱼的processor word，节省了内存带宽，减少cache miss；从性能对比看，BW 技术在scan方面是最好的，SIMD有打包和对其开销所以效果远不如 BW，而BW 存在选择 BW/V 和 BW/H 布局的问题，也是待研究的问题</description>
    </item>
    
    <item>
      <title>Cache Conscious Indexing for Decision-Support in Main Memory</title>
      <link>https://code0xff.org/post/2023/05/cache_conscious/</link>
      <pubDate>Sun, 28 May 2023 09:11:07 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2023/05/cache_conscious/</guid>
      <description>对于主内存 OLAP 场景，提出的针对 cache有效性的优化，如果排序数组远大于 cache line，则二分查找的 cache miss 是很严重的，基本每查找一次就有一次cache miss；T树 看起来是缓存友好的，但每次查找只有 min、max做了匹配，仍然会有很大的 cache miss，B 树虽然是面向磁盘的，但有多个子节点，一次可以做多个匹配，所以cache miss 比 T 树更好一些，hash index需要占用大量空间，当然二分的好处是不用空间；在这些基础上论文提出了针对cache line的 CSS树(Cache Sensitive Search Trees)，他在排序数组基础上，增加了一个字典数组，使得整个树可以被平铺，有点像 树堆，不过它的节点有多个，个数一般跟 cache line有关，它没有子节点指针，而是用数组下标来代替，这样一个 node 内可以放更多的数据，查找起来的cache miss就会小很多；值得注意的是类似满二叉树，CSS树的字典指向的排序数组其 part-1、part-2整合跟正常排序数组是相反的；从测试结果看CSS 树的表现也不错，随着CPU和内存差距越来越大，CSS树可能会变现的更好</description>
    </item>
    
    <item>
      <title>Column Imprints: A Secondary Index Structure</title>
      <link>https://code0xff.org/post/2023/05/column_imprints/</link>
      <pubDate>Fri, 26 May 2023 18:11:07 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2023/05/column_imprints/</guid>
      <description>针对主内存数据库，提出了一种轻量级二级索引技术：imprints column，它是属于bit 向量索引家族的，zone map对于随机值正好落在min、max内的查询就无效了，仍然需要扫描，而 bit map占用的空间更大，imprint 则综合了这两者的优点，它是基于cache line做bit向量分组的，对CPU更友好，而且将一个cache line内的值统一合并为一个bit向量，占用空间更小；通过 counter 和 repeat标志位，可以实现imprint 的压缩，论文中给出了相关的压缩、查询算法，由于是针对读场景的设计，更新主要是append和索引重建；通过实验对比，imprint 对于数据分布随机和有规律的场景，表现的都很好，索引压缩效果不错，压缩后的索引占比看 imprint最少，zonemap也差不多，WAH最高；查询性能看，三个索引基本差不多，imprint略好一些，时间上imprint也略块一些，但随着选择率上升几个都趋同；总体看随选择率上升也跟scan 差不多，但是对于熵低/高的场景表现都比较稳定</description>
    </item>
    
    <item>
      <title>SQL Server Column Store Indexes</title>
      <link>https://code0xff.org/post/2023/05/sql_server_column_store_indexes/</link>
      <pubDate>Wed, 24 May 2023 18:11:07 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2023/05/sql_server_column_store_indexes/</guid>
      <description>SQL Server 11代 Denali，在行存系统上增加了列存和索引结构，这些改动并不是重新来一套，而是基于现有技术的改进，如对行做了分片segment，每个 row segment 再根据 column 进一步细分为 column segment；column segment本身是现有的 blob存储，同时还利用了压缩技术，基于 column segment 又开发出了 segment directory，这个 directory包含了一些元信息如行数量、size、多少数据被编码了、min和max等，这些改动之后，还可以跟现有的lock、log、recovery、patition、mirror、replication完全兼容整合；之后查询引擎部分也会做一些改动来兼容行、列数据，这里使用了多核、bitmap filter、算子间的内存共享、SIMD等进一步优化，根据代价模型评估，选择合适的索引，测试TPC-DS时，前面大部分数据都是批的方式处理的，而且做了并行化，只有最后的聚合、重分区是用 行模式处理的，最后效率大幅度提升</description>
    </item>
    
    <item>
      <title>Bitmap Index Design and Evaluation </title>
      <link>https://code0xff.org/post/2023/05/bitmap_index/</link>
      <pubDate>Mon, 22 May 2023 09:23:04 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2023/05/bitmap_index/</guid>
      <description>针对 bitmap 索引提出的一系列指导设计建议，传统方式对于带谓词的查询，一般是：全表scan、B树 索引、每个谓词做scan然后merge；使用 bitmap 后采用第三种方案效果最好，论文中提出了四种时空权衡：空间最优、时间最优、基于空间限制下的时间最优、时空权衡； 在大量数、数据基础范围较小的情况下使用 bitmap 索引效果很好，而 bitmap 可以采用 基于范围的、基于等值的；基于范围的相当于 Value-List set，在这种场景下继续拆分，如基于&amp;lt;3,3&amp;gt;的Value-List，其空间比原始的更小；论文中提出了对 Algorithm RangeEval 改进的 Algorithm RangeEval-Opt 算法，需要处理的谓词更少，只需一次扫描；论文指出 范围编码的时空权衡效果更好，之后又对比了压缩的情况，buffer的增大，对于时空权衡也有帮助</description>
    </item>
    
    <item>
      <title>Advanced Database Systems: History of Databases</title>
      <link>https://code0xff.org/post/2023/05/advanced_database_systems-history_of_databases/</link>
      <pubDate>Sun, 21 May 2023 09:23:04 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2023/05/advanced_database_systems-history_of_databases/</guid>
      <description>数据库的发展历史，从复杂模型：网络模型、层次模型，再到简单的关系模型最后胜出，关系模型不止是简单，而且提出了物理、逻辑解耦、高层级别API；所以从1970年代开始，数据库的基本模型，发展方向是定了；后面出现了各种对关系模型的补充，但是大多数只是重复发明，除了code in database，schema last是比较新颖的发明；在这几十年内，商业数据库一直是主导，IBM、Oracle、微软一直是领导者；直到2000年互联网的出现打破了这个局面，数据库面临大量的访问，需要购买大量商业数据库成本太贵，此时开源产品就是更好的选择；同时也出现了各种对关系模型，他们的扩展性、性能都非常好，但他们不支持SQL、不支持事务，十年之后再看这些数据库多多少少都有一些局限性，于是分布式的NewSQL出现，加上云厂商的对象存储，云上数据库也成为主流；现在数据库有很多细分市场，每个主题内都有好几个玩家，这些数据库在巩固自己领地的同时，又在不断扩展自己的能力；他们开始支持SQL，增加事务，从历史角度看，声明式语言、解耦、简单模型一直是有生命力的</description>
    </item>
    
    <item>
      <title>Column Sketches: A Scan Accelerator for Rapid and Robust Predicate Evaluation</title>
      <link>https://code0xff.org/post/2023/05/column_sketches/</link>
      <pubDate>Wed, 17 May 2023 09:23:04 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2023/05/column_sketches/</guid>
      <description>B数索引 对于选择率低时效果很好、但选择率一旦上升性能就不行了；轻量级索引 Zone Map、Column Imprints、Feature Based Data Skipping对数据聚集性有要求；早期裁剪 ByteSlicing、Bit-Slicing、Approximate and Refine 在数据倾斜情况下，高位可能都是重复的效果不好。Column Sketches使用直方图统计列数据分布，同时考虑了频繁值和普通值，之后建立映射函数，将频繁值映射成唯一code，非频繁值均匀分布，通过这种映射之后，数值类型的 原先 8bit 的值，映射完只需要 2bit 就可以表示了，对于频繁唯一值也不需要回表检查进一步加速；对于分类型也是类似方式，只是不需要排序，可以直接映射。对比其他方案，Column Sketches在选择率高/低，L1 miss，tuple处理速度，数据倾斜，鲁棒性，数据加载上都很不错；Column Sketches还可以利用 SIMD加速scan，可以跟现有技术做整合</description>
    </item>
    
    <item>
      <title>Optimal Column Layout for Hybrid Workloads</title>
      <link>https://code0xff.org/post/2023/05/optimal_column_layout_for_hybrid_workloads/</link>
      <pubDate>Sat, 13 May 2023 09:23:04 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2023/05/optimal_column_layout_for_hybrid_workloads/</guid>
      <description>基于 HTAP 场景的列布局优化，仍然使用列布局，但是对列做水平分区，一个分区内包含多个 block，每个block 的大小是 CPU cache 的数倍，这样更好利用CPU；每个分区根据是否为边界(0 或 1 表示)，输出为一堆的 bit范围，这是一个 NP hard问题，也有相关研究可以解决此问题；工作负载包括：点查询、范围查询、插入、删除、更新；每种场景对应底层 I/O 包括 随机读、随机写、顺序读、顺序写，不同场景对于 block的访问频率也是不同的，论文给出了 10 种统计的直方图；之后收集各种负载的 block 访问情况然后离线分析，再将分析后的结果优化，输出为一堆bit，这样就可以动态调整分区，达到了自适应的效果；从性能分析结果看，可以适用于各种场景，除了读基本不变，其他场景都有大幅度提升，同时吞吐量也保持不变</description>
    </item>
    
    <item>
      <title>镜像合并&amp;配置文件同步</title>
      <link>https://code0xff.org/post/2023/06/%E9%95%9C%E5%83%8F%E5%90%88%E5%B9%B6%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E5%90%8C%E6%AD%A5/</link>
      <pubDate>Fri, 12 May 2023 11:23:04 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2023/06/%E9%95%9C%E5%83%8F%E5%90%88%E5%B9%B6%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E5%90%8C%E6%AD%A5/</guid>
      <description>镜像合并&amp;amp;配置文件同步</description>
    </item>
    
    <item>
      <title>Column-Stores vs. Row-Stores: How Different Are They Really?</title>
      <link>https://code0xff.org/post/2023/05/column-stores_vs_row-stores_how_different_are_they_really/</link>
      <pubDate>Sun, 07 May 2023 13:23:04 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2023/05/column-stores_vs_row-stores_how_different_are_they_really/</guid>
      <description>论文中通过行存系统来模拟列存，并将几个可能提升的关键点：延迟物化、块迭代、压缩、invisible-join，挨个拆分，并分析每种可能提升的原因和提升比例‘在行存的系统中使用垂直分区依然达不到列存性能，因为垂直分区后需要冗余存储主键，重建这些tuple 需要hash-join，数量大内存CPU开销也大；全索引如果返回的数据多hash-join压力大可能会更慢，反之可能更快；物化视图最好只需要读取部分数据，bitmap选择率高时效率会变差。对于列存：块迭代可以提升5% - 50%性能(取决于压缩)、invisible-join可以提升50% - 70%、压缩为2倍，如果数据有序可以量级提升、延迟物化提升3倍，如果将这些全部去掉，列存跟行存就差不多了；在列存中使用反规范化大宽表效果不好，增加维度表列冗余数据变多、只有大宽表的维度属性是排序高度压缩的才有效</description>
    </item>
    
    <item>
      <title>Lakehouse A New Generation of Open Platforms that Unify Data Warehousing and Advanced Analytics</title>
      <link>https://code0xff.org/post/2023/05/lakehouse-a-new-generation-of-open-platforms-that-unify/</link>
      <pubDate>Sat, 06 May 2023 12:17:11 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2023/05/lakehouse-a-new-generation-of-open-platforms-that-unify/</guid>
      <description>第一代的数仓有很好的数据治理，缺点是计算存储耦合，且无法存储半结构数据；第二代的数据湖将计算存储分离，且能存储各种格式，云厂商推出的对象存储本质是差不多，不过扩展和可靠性更高更便宜，但二代需要两套系统，数据要在数仓和对象存储之间做ETL，有很多问题；而LakeHouse则试图解决这些问题，通过在对象存储之上增加元数据管理，实现事务功能，数据质量、ACID都实现了，因为是基于开放的格式，不会锁定厂商，也能支持各种场景。因为开放的格式和对象存储的延迟问题，性能和每秒事务不会很好，通过缓存系统、辅助数据结构、数据布局优化来优化性能，另外DataFream 支持SQL和 API，可以延迟处理这样可以进一步优化。目前的限制：S3的延迟、单表事务、servless；通过TPC-DS对比其他云厂商的数仓，性能和价格都很不错，还能支持传统场景，机器学习、科学分析等各种复杂场景。</description>
    </item>
    
    <item>
      <title>Building An Elastic Query Engine on Disaggregated Storage</title>
      <link>https://code0xff.org/post/2023/05/building-an-elastic-query-engine-on-disaggregated-storage/</link>
      <pubDate>Thu, 04 May 2023 09:23:04 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2023/05/building-an-elastic-query-engine-on-disaggregated-storage/</guid>
      <description>SnowFlake的一篇论文，目前的架构包含四层：中心化的服务处理端到端的查询、计算层、临时存储层、对象存储层，并讨论了设计临时存储这一层的原因，通过访问数据指标能发现，临时存储的需求变化很大，跟计算层，远端持久存储层都不同。为更好的提高利用率需要计算层跟 临时存储层解耦。调度方面包括：工作窃取、延迟的一致性hash。由于云厂商的计费方式支持到秒级别，原先的预热VM 方式不好使了需要采用共享资源的方式来支持多租户，带来的挑战是，重新设计临时存储层(这层缓存了持久数据和中间数据，扩容会影响其他租户)，需要提供私有地址。三个开放问题：临时存和计算层解耦、内存-SSD-远端存储三层机制的有效管理、亚秒计费策略的共享资源架构挑战</description>
    </item>
    
    <item>
      <title>What Goes Around Comes Around</title>
      <link>https://code0xff.org/post/2023/05/what-goes-around-comes-around/</link>
      <pubDate>Wed, 03 May 2023 11:23:04 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2023/05/what-goes-around-comes-around/</guid>
      <description>Stonebraker的论文，介绍了 9个不同时代的数据模型；层次数据库IMS，以及网络数据库CODASYL，这两者都是逻辑数据、物理数据耦合，之后出现了关系模型，有了数据独立；再往后就是各种对关系模型的补充，如实体-关系模型、关系模型++、语义数据模型、OO模型、对象关系模型、半结构模型等；从中我们可以总结到：查询优化器很有用、技术的争论通常由市场和其他因素决定，简单模型比复制模型更容易实现数据独立、KISS 保持简单是很重要的、除非用户使用中出现很大问题否则他们不会买单、没有编程语言社区的支持想在语言上做改进突破很难、新技术的推广，需要标准化，或者大力度的推广、schema-last 可能只合适小部分场景</description>
    </item>
    
    <item>
      <title>LevelDB 多版本和压缩</title>
      <link>https://code0xff.org/post/2023/04/levedb-%E5%A4%9A%E7%89%88%E6%9C%AC%E5%92%8C%E5%8E%8B%E7%BC%A9/</link>
      <pubDate>Fri, 14 Apr 2023 19:20:03 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2023/04/levedb-%E5%A4%9A%E7%89%88%E6%9C%AC%E5%92%8C%E5%8E%8B%E7%BC%A9/</guid>
      <description>LevelDB 多版本和压缩</description>
    </item>
    
    <item>
      <title>LevelDB 辅助工具类</title>
      <link>https://code0xff.org/post/2023/04/levedb-%E5%B7%A5%E5%85%B7%E7%B1%BB/</link>
      <pubDate>Tue, 11 Apr 2023 09:20:01 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2023/04/levedb-%E5%B7%A5%E5%85%B7%E7%B1%BB/</guid>
      <description>LevelDB 的辅助工具类，如内存分配、编码、LRU、bloom filter等</description>
    </item>
    
    <item>
      <title>LevelDB SSTable模块</title>
      <link>https://code0xff.org/post/2023/04/levedb-sstable%E6%A8%A1%E5%9D%97/</link>
      <pubDate>Sun, 09 Apr 2023 09:22:11 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2023/04/levedb-sstable%E6%A8%A1%E5%9D%97/</guid>
      <description>LevelDB 的SSTable模块，存储在磁盘上的结构，包括文件格式的组织、数据文件块是如何读取的、索引文件块是如何组织的</description>
    </item>
    
    <item>
      <title>LevelDB MemTable模块</title>
      <link>https://code0xff.org/post/2023/04/levedb-memtable%E6%A8%A1%E5%9D%97/</link>
      <pubDate>Thu, 06 Apr 2023 11:32:19 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2023/04/levedb-memtable%E6%A8%A1%E5%9D%97/</guid>
      <description>LevelDB 的MemTable模块，底层使用 skip-list实现的，用来实现内存的读、写操作</description>
    </item>
    
    <item>
      <title>LevelDB Log模块</title>
      <link>https://code0xff.org/post/2023/04/levedb-log%E6%A8%A1%E5%9D%97/</link>
      <pubDate>Mon, 03 Apr 2023 11:32:19 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2023/04/levedb-log%E6%A8%A1%E5%9D%97/</guid>
      <description>LevelDB 的Log模块，用来实现WAL</description>
    </item>
    
    <item>
      <title>LevelDB 公开的接口</title>
      <link>https://code0xff.org/post/2023/03/levedb-%E5%85%AC%E5%BC%80%E6%8E%A5%E5%8F%A3/</link>
      <pubDate>Thu, 30 Mar 2023 11:32:19 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2023/03/levedb-%E5%85%AC%E5%BC%80%E6%8E%A5%E5%8F%A3/</guid>
      <description>LevelDB 的 src/include目录下的公开接口、跨平台的移植(对文件读写、线程、锁做了简单封装方便了跨平台迁移)，读写流程的大致流程等</description>
    </item>
    
    <item>
      <title>LevelDB 基本概念</title>
      <link>https://code0xff.org/post/2023/03/levedb-%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/</link>
      <pubDate>Mon, 27 Mar 2023 11:32:19 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2023/03/levedb-%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/</guid>
      <description>LevelDB的架构，各个组件的基本原理，一些基本操作(open、增删改)，高级特性(options、自定义比较器)</description>
    </item>
    
    <item>
      <title>OceanBase开发者大会分享</title>
      <link>https://code0xff.org/post/2023/03/oceanbase%E5%BC%80%E5%8F%91%E8%80%85%E5%A4%A7%E4%BC%9A/</link>
      <pubDate>Sun, 26 Mar 2023 11:32:19 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2023/03/oceanbase%E5%BC%80%E5%8F%91%E8%80%85%E5%A4%A7%E4%BC%9A/</guid>
      <description>看了几位大佬的分享，总结一下</description>
    </item>
    
    <item>
      <title>bustub数据库</title>
      <link>https://code0xff.org/post/2023/03/bustub%E6%95%B0%E6%8D%AE%E5%BA%93/</link>
      <pubDate>Mon, 20 Mar 2023 14:32:19 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2023/03/bustub%E6%95%B0%E6%8D%AE%E5%BA%93/</guid>
      <description>卡耐基梅隆的bustub数据库，实验课程；包括：LRU-k实现、可扩展的hash表、B+的的增删改查、B+树的并发控制、各种SQL算子的执行和优化，并发处理</description>
    </item>
    
    <item>
      <title>CPU and Cache Efficient Management of Memory-Resident Databases</title>
      <link>https://code0xff.org/post/2023/02/cpu-and-cache-efficient-management-of-memory-resident-databases/</link>
      <pubDate>Wed, 08 Feb 2023 17:35:19 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2023/02/cpu-and-cache-efficient-management-of-memory-resident-databases/</guid>
      <description>CPU and Cache Efficient Management of Memory-Resident Databases</description>
    </item>
    
    <item>
      <title>Efficiently Compiling Efficient Query Plans for Modern Hardware</title>
      <link>https://code0xff.org/post/2023/02/efficiently-compiling-efficient-query-plans-for-modern-hardware/</link>
      <pubDate>Sun, 05 Feb 2023 17:35:19 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2023/02/efficiently-compiling-efficient-query-plans-for-modern-hardware/</guid>
      <description>这是HyPer的一篇论文(HyPer是由德国莫尼黑大学主导的OLAP、OLTP混合型主内存数据库)，介绍了code-gen的具体实现，最初HyPer的code-gen是生成了C++代码，然后使用gcc编译；但编译时间很长，再加上优化时间就更长了，甚至比查询执行时间还长；于是HyPer做了优化，改用LLVM，将code-gen的核心代码转为了LLVM的IR，这个IR是调用LLVM的API生成的，不是手写的所以相对容易一些，对于一些简单的操作是生成了LLVM，于是复杂的操作，如scan、join、sort需要将LLVM和C++混合执行，LLVM可以直接调用C++，所以不存在性能损失；通过最后执行来看，LLVM的code-gen从编译、优化时间，SQL执行时间，都比其他系统有很大提升</description>
    </item>
    
    <item>
      <title>Generating code for holistic query evaluation</title>
      <link>https://code0xff.org/post/2023/02/generating-code-for-holistic-query-evaluation/</link>
      <pubDate>Sat, 04 Feb 2023 07:35:19 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2023/02/generating-code-for-holistic-query-evaluation/</guid>
      <description>英国爱丁堡大学的一篇论文，从传统系统到现代系统的变化一个重要点是：内存增大很多，以前的I/O瓶颈对于现在来说不那么重要了，反而是CPU和内存瓶颈；而之前的火山模型对于CPU利用率来说很不好，大量的虚函数调用，多层级的函数调用增加了cache miss，也会产生更多的指令，不利于并行化和cache局部性；这篇论文提出了一个代码模板，通过识别不同的查询计划算子，来对应的生成不同的代码(对应一个大函数)，不同函数之间通过物化来连接，之后通过编译器GCC来编译这段C代码，还可以对代码最O2级别优化(但会增加运行期执行时间)来达到更好的效果，论文对比了join、sort、聚合，虽然使用的是NSM存储模型，但是执行效果来看跟MonetDB的DSM差不多了；代码生成的缺点是对于小查询会有额外的开销(编译、优化、link时间)</description>
    </item>
    
    <item>
      <title>Implementing Database Operations Using SIMD Instructions</title>
      <link>https://code0xff.org/post/2023/02/implementing-database-operations-using-simd-instructions/</link>
      <pubDate>Wed, 01 Feb 2023 07:35:19 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2023/02/implementing-database-operations-using-simd-instructions/</guid>
      <description>介绍了SIMD指令一些基本概念，并行流水线，以及分支预测失败带来的影响；论文中提到了使用SIMD指令的方式，以及不同平台产生的差异；之后用伪代码的方式描述几个数据库常用操作；scan操作详细对比了标量版和SIMD版的区别，以及如何消除分支的方式，还有返回选中的一个元素、多个元素的标量、SIMD方式；聚合的实现方式SIMD有提供相关的操作 SIMD_min、SIMD_max即可，对于索引部分主要是介绍树结构索引，详细讨论了中间节点、叶子节点的实现方式；在有序元素上使用二分效率是非常高的，但也会有分支预测失败问题，论文中给出了混合二分+顺序扫描方式；最后是join处理方式，这里只列出了nested-loop join的SIMD实现，Duplicate-outer、Duplicate-inner、Rotate-inner</description>
    </item>
    
    <item>
      <title>Rethinking SIMD Vectorization for In-Memory Databases</title>
      <link>https://code0xff.org/post/2023/01/rethinking-simd-vectorization-for-in-memory-databases/</link>
      <pubDate>Fri, 27 Jan 2023 10:35:19 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2023/01/rethinking-simd-vectorization-for-in-memory-databases/</guid>
      <description>这是Oracle联合哥伦比亚大学做的研究，论文中讨重点讨论了数据并行化(线程、指令、数据)，也就是SIMD实现；论文中给出了一些基本的SIMD操作，如selective sotre/load、gather、scatter，在论文发表的时候，这几个操作主流CPU不是全支持，只能通过一些模拟操作来支持，如permutation等；通过定义这四个最基本的操作，再往上就可以定义数据库查询中比较重要的操作了，如：scan、hash-table(horizontal、vertical、build、线性探测、double hash、cuckoo hash)、bloom filter、分区(radix、hash、range)；通过hash、分区等操作，又可以定义出排序、join等更复杂的操作，相当于是层层搭积木；测试结果SIMD会有大幅度性能提升，但也受到cache size的影响</description>
    </item>
    
    <item>
      <title>Advanced Database Systems: Query Execution &amp; Processing</title>
      <link>https://code0xff.org/post/2023/01/advanced-database-systems-query-execution-and-processing/</link>
      <pubDate>Sun, 22 Jan 2023 19:35:19 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2023/01/advanced-database-systems-query-execution-and-processing/</guid>
      <description>这一部分是属于 执行引擎组件，由于现代系统从I/O变为CPU瓶颈，CPU的指令依赖、分支预测就阻塞了并行优化；MonetDB/X100就指出了火山模型、物化模型的问题，后使用了向量化/批模型来优化，为后续系统提供了方向。查询处理又包括：自顶向下vs字底向上；并行化包括：水平(exchange算子)、垂直、以及混合；worker的分配还包括单核单线程、单核pool；列存重建使用早期物化+SIP达到了早期物化的简单，同时兼具性能；主内存系统中二级索引和scan都有用，但需要综合考虑：选择性；硬件参数、数据布局、并发，优化器也需要配合重构整合；Oracle首创的混合行+列存储，又进一步提供了表达式替换(本质上是语法树子节点替换)</description>
    </item>
    
    <item>
      <title>SIMD-Scan: Ultra Fast in-Memory Table Scan using onChip Vector Processing Units</title>
      <link>https://code0xff.org/post/2023/01/ultra-fast-in-memory-table-scan-using-onchip-vector-processing-units/</link>
      <pubDate>Thu, 19 Jan 2023 10:35:19 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2023/01/ultra-fast-in-memory-table-scan-using-onchip-vector-processing-units/</guid>
      <description>现代数据库由I/O瓶颈转向了CPU瓶颈，利用多核能力加速全表扫描，但是向量化的能力没能充分发挥。使用向量化包括：内嵌汇编、硬件厂商提供的跨平台库函数、编译器指示符、编译器自动优化，每种都是可用性和可控性之间的权衡。论文中引入了两项优化：使用SIMD方式在寄存器中解压 轻量压缩数据(使用concatenate、shift、shuffle、mark等指令完成)；使用SIMD完成等值和范围查找(使用掩码指令，将4个元素加载到寄存器中，再通过min、max比较范围，最后生成索引数组向量位)，通过测试结果都有大幅度提升，并且优化实现可以适用各种数据库</description>
    </item>
    
    <item>
      <title>Make the most out of your SIMD investments: counter control flow divergence in compiled query pipelines</title>
      <link>https://code0xff.org/post/2023/01/make-the-most-out-of-your-simd-investments/</link>
      <pubDate>Tue, 17 Jan 2023 06:35:19 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2023/01/make-the-most-out-of-your-simd-investments/</guid>
      <description>现代数据库很多都采用了向量化执行，也就是利用 SIMD 指令，SIMD指令在碰到分支时，会出现部分元素不满足条件，导致不活跃影响利用率吞吐量下降，论文中利用了 AVX512指令集的：mark指令、permute指令、compress、expand，来实现重填充算法和策略；包括：全消费策略(需增加寄存器，主要利用buffer)，以及部分消费策略(增加新寄存器，利用mark)，在能放入cache的场景中，这两种算法表现的都不错，是scalar的两倍，但对于复杂场景，以及cache放不下的场景则表现退化，另外如何设置 阈值也是一个开放问题</description>
    </item>
    
    <item>
      <title>Accelerating Analytics with Dynamic In-Memory Expressions</title>
      <link>https://code0xff.org/post/2023/01/accelerating-analytics-with-dynamic-in-memory-expressions/</link>
      <pubDate>Fri, 13 Jan 2023 14:05:19 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2023/01/accelerating-analytics-with-dynamic-in-memory-expressions/</guid>
      <description>Oracle12推出了混合行/列的存储格式，磁盘(buffer pool)中按列存储，内存中按列存储加速OLAP场景；而表达式求值在很多场景下是黑盒，不易监控、也占用资源，Oracle捕获了频繁使用的表达式，将表达式物化到内存中，然后在查询计划中，根据代价来改变查询计划，将原始的查询计划的子树，替换为内存中的物化表达式，在OLAP场景中大幅度提升性能，在混合OLTP场景中也非常有效</description>
    </item>
    
    <item>
      <title>Materialization Strategies in the Vertica Analytic Database: Lessons Learned</title>
      <link>https://code0xff.org/post/2023/01/materialization-strategies-in-the-vertica-analytic-database-lessons-learned/</link>
      <pubDate>Sat, 07 Jan 2023 20:05:19 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2023/01/materialization-strategies-in-the-vertica-analytic-database-lessons-learned/</guid>
      <description>列存数据库会通过物化的方式来重建tuple，包括早期物化EM、延迟物化LM，延迟物化的性能更好，但实现更难，当出现join溢出时会出现，此时会退回到早期物化；论文在早期物化基础上增加了：边信息传递SIP技术，并给出了实现细节，如何创建SIP，如何做push down；使用EM+SIP技术，比原始的EM性能大幅度提升，并且在很多场景下比延迟物化LM性能更好</description>
    </item>
    
    <item>
      <title>MonetDB/X100: Hyper-Pipelining Query Execution</title>
      <link>https://code0xff.org/post/2023/01/monetdbx100-hyper-pipelining-query-execution/</link>
      <pubDate>Thu, 05 Jan 2023 10:35:19 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2023/01/monetdbx100-hyper-pipelining-query-execution/</guid>
      <description>2005年的一篇论文，通过分析MySQL、MonetDB发现这两种没有达到硬件上的预期效果，MySQL是因为经典的火山模型导致编译器没法利用循环流水线，出现大量CPU等待；而MonetDB避免了上述情况但使用了物化，又导致大量的内存带宽拷贝；这篇论文结合了这两者的特点，选择了向量化的执行方式，并配合了合适的cache size，使得执行效率大幅度提升</description>
    </item>
    
    <item>
      <title>Access Path Selection in Main-Memory Optimized Data Systems Should I Scan or Should I Probe</title>
      <link>https://code0xff.org/post/2023/01/access-path-selection-in-main-memory-optimized-data-systems-should-i-scan-or-should-i-probe/</link>
      <pubDate>Tue, 03 Jan 2023 10:35:19 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2023/01/access-path-selection-in-main-memory-optimized-data-systems-should-i-scan-or-should-i-probe/</guid>
      <description>CMU Query Execution &amp;amp; Processing课程的一篇论文，现代分析系统中scan越来越重要，但二级索引依然有用，通过对比硬件参数、数据布局、压缩、并发等综合情况考虑之下，来选择：scan执行 或者index执行；通过性能评估发现，调节scan或者index并不是一个固定的值，而是根据不同的参数以及硬件情况，会动态变化的</description>
    </item>
    
    <item>
      <title>Photon A Fast Query Engine for Lakehouse Systems</title>
      <link>https://code0xff.org/post/2023/01/photon-a-fast-query-engine-for-lakehouse-systems/</link>
      <pubDate>Mon, 02 Jan 2023 10:35:19 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2023/01/photon-a-fast-query-engine-for-lakehouse-systems/</guid>
      <description>Databricks 2022年在SIGMOD上发表的论文(最佳工业论文奖)，由于I/O方面有很多优化措施，而JVM的对向量化支持较差，之后用C++实现了向量化的执行引擎Photon，来实现进一步的性能提升；首先是从最底层scan开始替换，因为中间替换的代价较高，之后不断往上，直到某个算子Photon不能适配，则由列存转换为Spark的行存，退回到Spark执行，总体看性能可以提升好几倍</description>
    </item>
    
    <item>
      <title>MySQL的并发</title>
      <link>https://code0xff.org/post/2023/01/mysql%E7%9A%84%E5%B9%B6%E5%8F%91/</link>
      <pubDate>Sun, 01 Jan 2023 08:15:19 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2023/01/mysql%E7%9A%84%E5%B9%B6%E5%8F%91/</guid>
      <description>MVCC的基本概念，读已提交、可重复读隔离级别下的ReadView，MVCC的purage；锁的基本类型，X/S/IX/IS锁；record lock、gap lock、next-key lock、insert intention lock、隐式锁；各种隔离级别下的加锁过程，SHOW ENGINE INNODB STATUS 分析加锁过程，死锁的分析</description>
    </item>
    
    <item>
      <title>MySQL的恢复</title>
      <link>https://code0xff.org/post/2022/12/mysql%E7%9A%84%E6%81%A2%E5%A4%8D/</link>
      <pubDate>Thu, 22 Dec 2022 08:15:19 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2022/12/mysql%E7%9A%84%E6%81%A2%E5%A4%8D/</guid>
      <description>redo log的格式(逻辑+物理混合格式)、Mini-Transaction、redo log写入过程，写入page cache，log_sys结构、redo log的文件格式，如何刷新到磁盘上的，checkpoint过程，恢复过程；   undo log的格式(逻辑格式)、undo log的组织、回滚段、系统表空间的5号page，多个回滚段、rollback的过程；以及源码中的redo log定义、undo log定义</description>
    </item>
    
    <item>
      <title>MySQL的缓存</title>
      <link>https://code0xff.org/post/2022/12/mysql%E7%9A%84%E7%BC%93%E5%AD%98/</link>
      <pubDate>Mon, 19 Dec 2022 08:15:19 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2022/12/mysql%E7%9A%84%E7%BC%93%E5%AD%98/</guid>
      <description>Buffer Pool、Doublewrite Buffer、Redo相关的Log Buffer，自适应Hash索引、change buffer、以及InnoDB相关的参数汇总</description>
    </item>
    
    <item>
      <title>MySQL查询分析</title>
      <link>https://code0xff.org/post/2022/12/mysql%E6%9F%A5%E8%AF%A2%E5%88%86%E6%9E%90/</link>
      <pubDate>Thu, 15 Dec 2022 08:15:19 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2022/12/mysql%E6%9F%A5%E8%AF%A2%E5%88%86%E6%9E%90/</guid>
      <description>一些经典的RBO优化，包括子查询优化；一些CBO优化，统计信息收集，CBO的统计计算方式，常数成本调节；JOIN优化，并详细介绍了EXPLAIN的各个字段含义，其中select_type、type、Extra这几个字段比较重要，另外还有JSON个事的执行计划，optimizer trace</description>
    </item>
    
    <item>
      <title>用工具分析MySQL存储文件</title>
      <link>https://code0xff.org/post/2022/12/%E7%94%A8%E5%B7%A5%E5%85%B7%E5%88%86%E6%9E%90mysql%E5%AD%98%E5%82%A8%E6%96%87%E4%BB%B6/</link>
      <pubDate>Tue, 13 Dec 2022 08:35:19 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2022/12/%E7%94%A8%E5%B7%A5%E5%85%B7%E5%88%86%E6%9E%90mysql%E5%AD%98%E5%82%A8%E6%96%87%E4%BB%B6/</guid>
      <description>innodb_ruby是专门分析InnoDB的工具，通过这个工具能获取到系统表空间、普通表空间的统计信息，段信息、区信息，以及4个核心的SYS表；；以及索引信息统计，page信息汇总，page信息dump，还可以用图表的方式展示</description>
    </item>
    
    <item>
      <title>一本书、一部电影(2022年)</title>
      <link>https://code0xff.org/post/2022/12/2022%E5%B9%B4%E7%9C%8B%E7%9A%84%E4%B9%A6%E5%92%8C%E7%94%B5%E5%BD%B1/</link>
      <pubDate>Sun, 11 Dec 2022 08:35:19 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2022/12/2022%E5%B9%B4%E7%9C%8B%E7%9A%84%E4%B9%A6%E5%92%8C%E7%94%B5%E5%BD%B1/</guid>
      <description>2022年看过的书籍、电影，旅游过的地方</description>
    </item>
    
    <item>
      <title>MySQL文件存储结构</title>
      <link>https://code0xff.org/post/2022/12/mysql%E6%96%87%E4%BB%B6%E5%AD%98%E5%82%A8%E7%BB%93%E6%9E%84/</link>
      <pubDate>Fri, 02 Dec 2022 08:35:19 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2022/12/mysql%E6%96%87%E4%BB%B6%E5%AD%98%E5%82%A8%E7%BB%93%E6%9E%84/</guid>
      <description>InnoDB架构包含内存、磁盘两种结构；基于磁盘的结构中包括：系统表空间、普通表空间、通用表空间、双写缓冲区、Undo表空间、redo日志；临时表空间；这里最重要的当属系统表空间 和 普通表空间；普通表空间分为段、区、页、行这些概念，256个区一组，第0组包含FSP_HDR、XDES、INODE，存储数据的地方是INDEX；系统表空间则多了Data Dictionary Header部分</description>
    </item>
    
    <item>
      <title>调试MySQL</title>
      <link>https://code0xff.org/post/2022/11/%E8%B0%83%E8%AF%95mysql/</link>
      <pubDate>Sun, 20 Nov 2022 08:35:19 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2022/11/%E8%B0%83%E8%AF%95mysql/</guid>
      <description>搭建一个MySQL调试环境</description>
    </item>
    
    <item>
      <title>关于云环境中多租户问题的论文</title>
      <link>https://code0xff.org/post/2022/11/multi-tenant-cloud-data-services/</link>
      <pubDate>Fri, 18 Nov 2022 18:35:19 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2022/11/multi-tenant-cloud-data-services/</guid>
      <description>主要挑战：存储计算分离架构，多租户共享资源需要解决的问题，serverless不需要预定资源随用随付费；隔离VS安全，隔离程度高越安全但价格高，整合程度高虚拟化stack高便捷性好便宜；自建机房的SLA基本能确定，但在云共享环境中就不是一个固定值了，一般厂商会提供可用性、吞吐量、延迟这些保证，还有多租户集群管理；开放问题：CPU的扩展和内存之间的结构、缓存的动态迁移、云服务价格优化、自动调优、新硬件的影响、资源评估</description>
    </item>
    
    <item>
      <title>MillWheel</title>
      <link>https://code0xff.org/post/2023/03/millwheel/</link>
      <pubDate>Fri, 18 Nov 2022 08:35:19 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2023/03/millwheel/</guid>
      <description>MillWheel: Fault-Tolerant Stream Processing at Internet Scale</description>
    </item>
    
    <item>
      <title>How to Read a Paper</title>
      <link>https://code0xff.org/post/2022/11/how-to-read-a-paper/</link>
      <pubDate>Thu, 17 Nov 2022 08:35:19 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2022/11/how-to-read-a-paper/</guid>
      <description>一篇论文要读三遍，第一遍读摘要和所有标题，对论文有大概的了解，这是什么类型的论文、测试的？还是分析型的？根据其他哪些论文有关？论文的主要贡献是什么？第二遍仔细阅读，对于共识和非常细节的地方可以略过；第三遍，要站在作者的角度去理解这篇论文，甚至要反推论文中的实现</description>
    </item>
    
    <item>
      <title>CMU数据库总结</title>
      <link>https://code0xff.org/post/2022/11/cmu%E6%95%B0%E6%8D%AE%E5%BA%93%E6%80%BB%E7%BB%93/</link>
      <pubDate>Sun, 13 Nov 2022 19:35:19 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2022/11/cmu%E6%95%B0%E6%8D%AE%E5%BA%93%E6%80%BB%E7%BB%93/</guid>
      <description>基础部分、查询处理&amp;amp;优化、并发控制、事务和恢复、分布式数据库 总结思维导图</description>
    </item>
    
    <item>
      <title>FlumeJava: Easy, Efficient Data-Parallel Pipelines</title>
      <link>https://code0xff.org/post/2022/11/flumejava%E8%AE%BA%E6%96%87/</link>
      <pubDate>Thu, 10 Nov 2022 08:35:19 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2022/11/flumejava%E8%AE%BA%E6%96%87/</guid>
      <description>FlumeJava论文:《FlumeJava: Easy, Efficient Data-Parallel Pipelines》翻译</description>
    </item>
    
    <item>
      <title>Apache Flink™: Stream and Batch Processing in a Single Engine</title>
      <link>https://code0xff.org/post/2022/11/flink%E8%AE%BA%E6%96%87/</link>
      <pubDate>Sat, 05 Nov 2022 09:35:19 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2022/11/flink%E8%AE%BA%E6%96%87/</guid>
      <description>Flink论文：《Apache Flink™: Stream and Batch Processing in a Single Engine》翻译</description>
    </item>
    
    <item>
      <title>容器网络</title>
      <link>https://code0xff.org/post/2022/10/%E5%AE%B9%E5%99%A8%E7%BD%91%E7%BB%9C/</link>
      <pubDate>Sun, 16 Oct 2022 12:12:19 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2022/10/%E5%AE%B9%E5%99%A8%E7%BD%91%E7%BB%9C/</guid>
      <description>容器网络原理</description>
    </item>
    
    <item>
      <title>B&#43;树执行过程</title>
      <link>https://code0xff.org/post/2022/10/b&#43;%E6%A0%91%E6%89%A7%E8%A1%8C%E8%BF%87%E7%A8%8B/</link>
      <pubDate>Sat, 15 Oct 2022 12:12:19 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2022/10/b&#43;%E6%A0%91%E6%89%A7%E8%A1%8C%E8%BF%87%E7%A8%8B/</guid>
      <description>B+树的原理、插入和删除</description>
    </item>
    
    <item>
      <title>k8s POD使用总结</title>
      <link>https://code0xff.org/post/2022/09/k8s%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Sun, 18 Sep 2022 12:12:19 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2022/09/k8s%E4%BD%BF%E7%94%A8/</guid>
      <description>k8s使用的一些记录</description>
    </item>
    
    <item>
      <title>高可用设计</title>
      <link>https://code0xff.org/post/2022/09/%E9%AB%98%E5%8F%AF%E7%94%A8%E8%AE%BE%E8%AE%A1/</link>
      <pubDate>Sun, 18 Sep 2022 12:12:19 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2022/09/%E9%AB%98%E5%8F%AF%E7%94%A8%E8%AE%BE%E8%AE%A1/</guid>
      <description>扩展spark thrift，变成两层调度</description>
    </item>
    
    <item>
      <title>Architecture of a Database System论文翻译</title>
      <link>https://code0xff.org/post/2022/09/architecture-of-a-database-system/</link>
      <pubDate>Sat, 03 Sep 2022 11:11:11 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2022/09/architecture-of-a-database-system/</guid>
      <description>Hellerstein、Michael Stonebraker、James Hamilton几位大神写的数据库系统架构</description>
    </item>
    
    <item>
      <title>确定要在DBMS中用mmap吗</title>
      <link>https://code0xff.org/post/2022/08/%E7%A1%AE%E5%AE%9A%E8%A6%81%E5%9C%A8dbms%E4%B8%AD%E7%94%A8mmap%E5%90%97/</link>
      <pubDate>Thu, 11 Aug 2022 19:08:19 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2022/08/%E7%A1%AE%E5%AE%9A%E8%A6%81%E5%9C%A8dbms%E4%B8%AD%E7%94%A8mmap%E5%90%97/</guid>
      <description>2022年 CIDR的一篇论文，CMU的网红教授发表的，介绍mmap的概念，以及为什么数据库不要用mmap</description>
    </item>
    
    <item>
      <title>为何Uber要将PostgreSQL迁到MySQL</title>
      <link>https://code0xff.org/post/2022/08/%E4%B8%BA%E4%BD%95uber%E8%A6%81%E5%B0%86postgresql%E8%BF%81%E5%88%B0mysql/</link>
      <pubDate>Mon, 08 Aug 2022 12:12:19 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2022/08/%E4%B8%BA%E4%BD%95uber%E8%A6%81%E5%B0%86postgresql%E8%BF%81%E5%88%B0mysql/</guid>
      <description>2016年的一篇文章，讲述了uber为什么要将PostgreSQL迁移到MySQL</description>
    </item>
    
    <item>
      <title>Kyuubi设计调研</title>
      <link>https://code0xff.org/post/2022/08/kyuubi%E8%AE%BE%E8%AE%A1%E8%B0%83%E7%A0%94/</link>
      <pubDate>Mon, 01 Aug 2022 12:12:19 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2022/08/kyuubi%E8%AE%BE%E8%AE%A1%E8%B0%83%E7%A0%94/</guid>
      <description>Kyuubi设计调研</description>
    </item>
    
    <item>
      <title>容灾部署调研</title>
      <link>https://code0xff.org/post/2022/07/%E5%AE%B9%E7%81%BE%E9%83%A8%E7%BD%B2%E8%B0%83%E7%A0%94/</link>
      <pubDate>Sat, 30 Jul 2022 14:32:19 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2022/07/%E5%AE%B9%E7%81%BE%E9%83%A8%E7%BD%B2%E8%B0%83%E7%A0%94/</guid>
      <description>容灾部署调研</description>
    </item>
    
    <item>
      <title>卡内基梅隆的数据库课程-1</title>
      <link>https://code0xff.org/post/2022/07/cmu%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AF%BE%E7%A8%8B/</link>
      <pubDate>Fri, 22 Jul 2022 20:32:19 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2022/07/cmu%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AF%BE%E7%A8%8B/</guid>
      <description>卡内基梅隆的数据库课程，包括：背景、关系代数、数据库存储、buffer pool、hash table、index、index concurrency control、sorting+aggregations、joins algorithms</description>
    </item>
    
    <item>
      <title>卡内基梅隆的数据库课程-2</title>
      <link>https://code0xff.org/post/2022/07/cmu%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AF%BE%E7%A8%8B-2/</link>
      <pubDate>Mon, 04 Jul 2022 20:32:19 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2022/07/cmu%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AF%BE%E7%A8%8B-2/</guid>
      <description>卡内基梅隆的数据库课程，包括：查询执行，火山-物化-向量模型，访问方式，顺序-索引-多索引等，顺序访问的优化，表达式评估，并行VS分布式，调度模式，I/O并行化；查询优化架构、RBO、CBO、逻辑计划VS物理计划、关系代数的优化以及一些例子、复杂谓词的类型和选择性、采样、基于概率的选择性、多join查询的优化，动态规划、遗传优化等</description>
    </item>
    
    <item>
      <title>卡内基梅隆的数据库课程-3</title>
      <link>https://code0xff.org/post/2022/07/cmu%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AF%BE%E7%A8%8B-3/</link>
      <pubDate>Mon, 04 Jul 2022 19:32:19 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2022/07/cmu%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AF%BE%E7%A8%8B-3/</guid>
      <description>卡内基梅隆的数据库课程，包括：事务的定义和ACID，隔离性(并发场景下的交错执行)，RW、WR、WW冲突，可串行化、Conflict Serializability(交换、优先图)、View Serializability(NP完全问题)；lock VS latch，lock类型，锁管理器，2PL，S2PL，SS2PL；死锁检测(是否有环)，根据各种条件打破循环，死锁预防(基于时间戳分配)，锁粒度(层级锁，支持更高并发)，IS、IX、SIX锁； 时间戳排序并发控制，W-TS(X)、R-TS(X)，可恢复性；OCC，三个方面阶段：读/写、校验、写入，backward validation，forward validation；幻读，重新执行，谓词锁，索引锁，事务隔离级别，基于2PL方式的各种隔离级别；MVCC并发控制，TO、OCC、2PL，版本存储append-only、time-travel、delta-storage；垃圾收集：Tuple-level(Background Vacuuming vs. Cooperative Cleaning)、Transaction-level；索引管理，主索引管理，二级索引管理(Logical Pointers、Physical Pointers)、MVCC index；MVCC delete(Deleted Flag、Tombstone Tuple)</description>
    </item>
    
    <item>
      <title>卡内基梅隆的数据库课程-4</title>
      <link>https://code0xff.org/post/2022/07/cmu%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AF%BE%E7%A8%8B-4/</link>
      <pubDate>Mon, 04 Jul 2022 19:32:19 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2022/07/cmu%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AF%BE%E7%A8%8B-4/</guid>
      <description>卡内基梅隆的数据库课程，包括：失败的各种情况，各种存储类型，失败的分类；redo 和 undo；buffer pool 策略；steal、no-force；shadow paging，sqlite的shadow paging；WAL协议格式，物理日志，逻辑日志，checkpoint失败恢复算法ARIES：Write-Ahead Logging，Repeating History During Redo，Logging Changes During Undo；LSN Log Sequence Numbers；正常事务操作恢复，终止事务操作恢复；Fuzzy Checkpointing，活跃事务表，脏页表；Recovery Algorithm的三个阶段：Analysis、Redo、Undo，恢复算法的性能改进</description>
    </item>
    
    <item>
      <title>卡内基梅隆的数据库课程-5</title>
      <link>https://code0xff.org/post/2022/07/cmu%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AF%BE%E7%A8%8B-5/</link>
      <pubDate>Mon, 04 Jul 2022 19:31:19 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2022/07/cmu%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AF%BE%E7%A8%8B-5/</guid>
      <description>卡内基梅隆的数据库课程，包括：分布式数据库，并行vs分布式，分布式数据库架构，shared-everything、shared-memory、shared-disk、shared-nothing；同质化节点vs非同质化节点；数据的透明传输，单节点vs分布式节点；协调事务，hash分区，range分区；OLTP，非拜占庭环境，原子提交协议，2PC，3PC、paxos、raft、zab、viewstamped，2PC的优化，multi-paxos，2PC vs paxos；复制配置：主-副本、多主，k-safety，传播时机：continuous、on commit，主动 vs 被动；CAP理论联邦数据库；OLAP，星型模型vs雪花模型，push vs pull，查询计划片段 vs SQL重写，分布式join算法，云系统，组件分解：系统catalog、节点管理、query优化；统一的访问格式</description>
    </item>
    
    <item>
      <title>What&#39;s Really New with NewSQL论文</title>
      <link>https://code0xff.org/post/2022/07/whats-really-new-with-newsql%E8%AE%BA%E6%96%87/</link>
      <pubDate>Sun, 03 Jul 2022 20:32:19 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2022/07/whats-really-new-with-newsql%E8%AE%BA%E6%96%87/</guid>
      <description>What’s Really New with NewSQL? 论文 2016年发表在 sigmod上的</description>
    </item>
    
    <item>
      <title>PingCAP提供的数据库学习资料</title>
      <link>https://code0xff.org/post/2022/07/pingcap%E6%8F%90%E4%BE%9B%E7%9A%84%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/</link>
      <pubDate>Sat, 02 Jul 2022 14:32:19 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2022/07/pingcap%E6%8F%90%E4%BE%9B%E7%9A%84%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/</guid>
      <description>PingCAP提供的数据库学习资料</description>
    </item>
    
    <item>
      <title>Snowflake论文</title>
      <link>https://code0xff.org/post/2023/03/snowflake%E8%AE%BA%E6%96%87/</link>
      <pubDate>Sat, 02 Jul 2022 14:32:19 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2023/03/snowflake%E8%AE%BA%E6%96%87/</guid>
      <description>The Snowflake Elastic Data Warehouse 论文 2015年发表在 sigmod上的</description>
    </item>
    
    <item>
      <title>Spark SQL论文</title>
      <link>https://code0xff.org/post/2022/07/spark-sql%E8%AE%BA%E6%96%87/</link>
      <pubDate>Fri, 01 Jul 2022 20:45:19 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2022/07/spark-sql%E8%AE%BA%E6%96%87/</guid>
      <description>Spark SQL: Relational Data Processing in Spark 论文</description>
    </item>
    
    <item>
      <title>Delta Lake论文</title>
      <link>https://code0xff.org/post/2022/06/delta-lake%E8%AE%BA%E6%96%87/</link>
      <pubDate>Fri, 24 Jun 2022 21:45:19 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2022/06/delta-lake%E8%AE%BA%E6%96%87/</guid>
      <description>Delta Lake: High-Performance ACID Table Storage over Cloud Object Stores 论文</description>
    </item>
    
    <item>
      <title>Chubby论文</title>
      <link>https://code0xff.org/post/2022/06/chubby%E8%AE%BA%E6%96%87/</link>
      <pubDate>Thu, 16 Jun 2022 09:43:19 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2022/06/chubby%E8%AE%BA%E6%96%87/</guid>
      <description>The Chubby lock service for loosely-coupled distributed systems 论文</description>
    </item>
    
    <item>
      <title>Raft A Consensus Algorithm for Replicated Logs记录</title>
      <link>https://code0xff.org/post/2022/06/raft-a-consensus-algorithm-for-replicated-logs%E8%AE%B0%E5%BD%95/</link>
      <pubDate>Sun, 05 Jun 2022 09:43:19 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2022/06/raft-a-consensus-algorithm-for-replicated-logs%E8%AE%B0%E5%BD%95/</guid>
      <description>Raft A Consensus Algorithm for Replicated Logs总结</description>
    </item>
    
    <item>
      <title>自定义HiveServer设计</title>
      <link>https://code0xff.org/post/2022/06/%E8%87%AA%E5%AE%9A%E4%B9%89hiveserver%E8%AE%BE%E8%AE%A1/</link>
      <pubDate>Sun, 05 Jun 2022 09:43:19 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2022/06/%E8%87%AA%E5%AE%9A%E4%B9%89hiveserver%E8%AE%BE%E8%AE%A1/</guid>
      <description>实现一套自己定义的Hive RPC服务</description>
    </item>
    
    <item>
      <title>Raft论文</title>
      <link>https://code0xff.org/post/2022/05/raft%E8%AE%BA%E6%96%87/</link>
      <pubDate>Mon, 16 May 2022 18:43:19 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2022/05/raft%E8%AE%BA%E6%96%87/</guid>
      <description>In Search of an Understandable Consensus Algorithm</description>
    </item>
    
    <item>
      <title>Multi Paxos总结</title>
      <link>https://code0xff.org/post/2022/05/multi-paxos/</link>
      <pubDate>Sun, 15 May 2022 18:43:19 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2022/05/multi-paxos/</guid>
      <description>Implemening Replicated Logs with Paxos 中的Multi Paxos部分</description>
    </item>
    
    <item>
      <title>Basic Paxos总结</title>
      <link>https://code0xff.org/post/2022/05/basic-paxos/</link>
      <pubDate>Sat, 14 May 2022 09:43:19 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2022/05/basic-paxos/</guid>
      <description>Implemening Replicated Logs with Paxos 中的Basic Paxos部分</description>
    </item>
    
    <item>
      <title>Java的APM工具原理</title>
      <link>https://code0xff.org/post/2022/05/java%E7%9A%84apm%E5%B7%A5%E5%85%B7%E5%8E%9F%E7%90%86/</link>
      <pubDate>Mon, 02 May 2022 10:43:19 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2022/05/java%E7%9A%84apm%E5%B7%A5%E5%85%B7%E5%8E%9F%E7%90%86/</guid>
      <description>Java的APM工具原理</description>
    </item>
    
    <item>
      <title>Paxos Made Simple论文</title>
      <link>https://code0xff.org/post/2022/05/paxos-made-simple%E8%AE%BA%E6%96%87/</link>
      <pubDate>Sun, 01 May 2022 20:43:19 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2022/05/paxos-made-simple%E8%AE%BA%E6%96%87/</guid>
      <description>Paxos Made Simple论文</description>
    </item>
    
    <item>
      <title>BigTable论文</title>
      <link>https://code0xff.org/post/2023/03/bigtable%E8%AE%BA%E6%96%87/</link>
      <pubDate>Wed, 20 Apr 2022 20:43:19 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2023/03/bigtable%E8%AE%BA%E6%96%87/</guid>
      <description>BigTable论文</description>
    </item>
    
    <item>
      <title>MapReduce论文</title>
      <link>https://code0xff.org/post/2022/04/mapreduce%E8%AE%BA%E6%96%87/</link>
      <pubDate>Wed, 20 Apr 2022 12:43:19 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2022/04/mapreduce%E8%AE%BA%E6%96%87/</guid>
      <description>MapReduce论文</description>
    </item>
    
    <item>
      <title>GFS论文</title>
      <link>https://code0xff.org/post/2022/04/gfs%E8%AE%BA%E6%96%87/</link>
      <pubDate>Wed, 13 Apr 2022 08:54:19 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2022/04/gfs%E8%AE%BA%E6%96%87/</guid>
      <description>读GFS论文</description>
    </item>
    
    <item>
      <title>MapRedue是一个巨大的退步</title>
      <link>https://code0xff.org/post/2022/03/mapredue%E6%98%AF%E4%B8%80%E4%B8%AA%E5%B7%A8%E5%A4%A7%E7%9A%84%E9%80%80%E6%AD%A5/</link>
      <pubDate>Sat, 26 Mar 2022 11:38:31 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2022/03/mapredue%E6%98%AF%E4%B8%80%E4%B8%AA%E5%B7%A8%E5%A4%A7%E7%9A%84%E9%80%80%E6%AD%A5/</guid>
      <description>2008年的一篇文章，著名数据库专家抨击MapReduce相比数据库是巨大退步</description>
    </item>
    
    <item>
      <title>Hive论文</title>
      <link>https://code0xff.org/post/2022/03/hive%E8%AE%BA%E6%96%87/</link>
      <pubDate>Sun, 20 Mar 2022 08:54:37 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2022/03/hive%E8%AE%BA%E6%96%87/</guid>
      <description>Hive论文</description>
    </item>
    
    <item>
      <title>Spark逻辑计划的解析</title>
      <link>https://code0xff.org/post/2022/03/spark%E9%80%BB%E8%BE%91%E8%AE%A1%E5%88%92%E7%9A%84%E8%A7%A3%E6%9E%90/</link>
      <pubDate>Sun, 06 Mar 2022 11:20:43 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2022/03/spark%E9%80%BB%E8%BE%91%E8%AE%A1%E5%88%92%E7%9A%84%E8%A7%A3%E6%9E%90/</guid>
      <description>介绍spark是如何做逻辑计划解析，并优化的</description>
    </item>
    
    <item>
      <title>Spark的注入规则</title>
      <link>https://code0xff.org/post/2022/03/spark%E7%9A%84%E6%B3%A8%E5%85%A5%E8%A7%84%E5%88%99/</link>
      <pubDate>Fri, 04 Mar 2022 21:46:12 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2022/03/spark%E7%9A%84%E6%B3%A8%E5%85%A5%E8%A7%84%E5%88%99/</guid>
      <description>扩展Spark的注入规则，实现updaet</description>
    </item>
    
    <item>
      <title>用javacc实现四则运算</title>
      <link>https://code0xff.org/post/2022/02/%E7%94%A8javacc%E5%AE%9E%E7%8E%B0%E5%9B%9B%E5%88%99%E8%BF%90%E7%AE%97/</link>
      <pubDate>Sat, 26 Feb 2022 15:15:11 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2022/02/%E7%94%A8javacc%E5%AE%9E%E7%8E%B0%E5%9B%9B%E5%88%99%E8%BF%90%E7%AE%97/</guid>
      <description>用javacc实现四则运算</description>
    </item>
    
    <item>
      <title>scala的一些特性</title>
      <link>https://code0xff.org/post/2022/02/scala%E7%9A%84%E4%B8%80%E4%BA%9B%E7%89%B9%E6%80%A7/</link>
      <pubDate>Thu, 24 Feb 2022 18:35:31 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2022/02/scala%E7%9A%84%E4%B8%80%E4%BA%9B%E7%89%B9%E6%80%A7/</guid>
      <description>scala的一些特性</description>
    </item>
    
    <item>
      <title>Kudu论文翻译</title>
      <link>https://code0xff.org/post/2022/02/kudu%E8%AE%BA%E6%96%87%E7%BF%BB%E8%AF%91/</link>
      <pubDate>Sun, 20 Feb 2022 10:27:11 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2022/02/kudu%E8%AE%BA%E6%96%87%E7%BF%BB%E8%AF%91/</guid>
      <description>读Kudu论文</description>
    </item>
    
    <item>
      <title>Kudu的模型设计</title>
      <link>https://code0xff.org/post/2022/02/kudu%E7%9A%84%E6%A8%A1%E5%9E%8B%E8%AE%BE%E8%AE%A1/</link>
      <pubDate>Sun, 13 Feb 2022 14:28:17 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2022/02/kudu%E7%9A%84%E6%A8%A1%E5%9E%8B%E8%AE%BE%E8%AE%A1/</guid>
      <description>关于kudu的数据模型</description>
    </item>
    
    <item>
      <title>几种开源数据库对元数据的管理</title>
      <link>https://code0xff.org/post/2022/01/%E5%87%A0%E7%A7%8D%E5%BC%80%E6%BA%90%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AF%B9%E5%85%83%E6%95%B0%E6%8D%AE%E7%9A%84%E7%AE%A1%E7%90%86/</link>
      <pubDate>Tue, 25 Jan 2022 18:17:22 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2022/01/%E5%87%A0%E7%A7%8D%E5%BC%80%E6%BA%90%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AF%B9%E5%85%83%E6%95%B0%E6%8D%AE%E7%9A%84%E7%AE%A1%E7%90%86/</guid>
      <description>几种开源数据库对元数据的管理</description>
    </item>
    
    <item>
      <title>LR算法</title>
      <link>https://code0xff.org/post/2022/01/lr%E7%AE%97%E6%B3%95/</link>
      <pubDate>Sun, 23 Jan 2022 10:09:33 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2022/01/lr%E7%AE%97%E6%B3%95/</guid>
      <description>图解LR算法</description>
    </item>
    
    <item>
      <title>对永久组合的实践</title>
      <link>https://code0xff.org/post/2022/01/%E5%AF%B9%E6%B0%B8%E4%B9%85%E7%BB%84%E5%90%88%E7%9A%84%E5%AE%9E%E8%B7%B5/</link>
      <pubDate>Sun, 16 Jan 2022 18:17:22 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2022/01/%E5%AF%B9%E6%B0%B8%E4%B9%85%E7%BB%84%E5%90%88%E7%9A%84%E5%AE%9E%E8%B7%B5/</guid>
      <description>对永久组合的实践</description>
    </item>
    
    <item>
      <title>用DFA验证字符串中的数字</title>
      <link>https://code0xff.org/post/2022/01/%E7%94%A8dfa%E9%AA%8C%E8%AF%81%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E7%9A%84%E6%95%B0%E5%AD%97/</link>
      <pubDate>Sat, 08 Jan 2022 09:11:12 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2022/01/%E7%94%A8dfa%E9%AA%8C%E8%AF%81%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E7%9A%84%E6%95%B0%E5%AD%97/</guid>
      <description>一个字符串，包含小数和指数部分，采用DFA的方式做验证其有效性</description>
    </item>
    
    <item>
      <title>分布式数据库课程中的论文</title>
      <link>https://code0xff.org/post/2021/12/%E5%88%86%E5%B8%83%E5%BC%8F%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AF%BE%E7%A8%8B%E4%B8%AD%E7%9A%84%E8%AE%BA%E6%96%87/</link>
      <pubDate>Sun, 19 Dec 2021 20:53:31 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2021/12/%E5%88%86%E5%B8%83%E5%BC%8F%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AF%BE%E7%A8%8B%E4%B8%AD%E7%9A%84%E8%AE%BA%E6%96%87/</guid>
      <description>这里罗列了《分布式数据库课程中的论文》这个网络课程中推荐的论文</description>
    </item>
    
    <item>
      <title>数据密集型应用设计读书笔记</title>
      <link>https://code0xff.org/post/2021/12/%E6%95%B0%E6%8D%AE%E5%AF%86%E9%9B%86%E5%9E%8B%E5%BA%94%E7%94%A8%E8%AE%BE%E8%AE%A1/</link>
      <pubDate>Thu, 02 Dec 2021 12:07:19 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2021/12/%E6%95%B0%E6%8D%AE%E5%AF%86%E9%9B%86%E5%9E%8B%E5%BA%94%E7%94%A8%E8%AE%BE%E8%AE%A1/</guid>
      <description>读《数据密集型应用设计》</description>
    </item>
    
    <item>
      <title>UNIX环境高级编程读书笔记</title>
      <link>https://code0xff.org/post/2021/12/unix%E7%8E%AF%E5%A2%83%E9%AB%98%E7%BA%A7%E7%BC%96%E7%A8%8B/</link>
      <pubDate>Wed, 01 Dec 2021 12:07:19 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2021/12/unix%E7%8E%AF%E5%A2%83%E9%AB%98%E7%BA%A7%E7%BC%96%E7%A8%8B/</guid>
      <description>读《UNIX环境高级编程》</description>
    </item>
    
    <item>
      <title>HANA和TeraData数据库迁移调研</title>
      <link>https://code0xff.org/post/2021/11/hana%E5%92%8Cteradata%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%81%E7%A7%BB%E8%B0%83%E7%A0%94/</link>
      <pubDate>Fri, 26 Nov 2021 17:46:21 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2021/11/hana%E5%92%8Cteradata%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%81%E7%A7%BB%E8%B0%83%E7%A0%94/</guid>
      <description>调研HANA和TD的数据类型，各种语法，调研迁移的可能性</description>
    </item>
    
    <item>
      <title>TPC-DS</title>
      <link>https://code0xff.org/post/2021/11/tpc-ds/</link>
      <pubDate>Fri, 26 Nov 2021 17:46:21 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2021/11/tpc-ds/</guid>
      <description>TPC-DS的安装和测试</description>
    </item>
    
    <item>
      <title>A Critique of ANSI SQL Isolation Levels论文</title>
      <link>https://code0xff.org/post/2021/11/a-critique-of-ansi-sql-isolation-levels/</link>
      <pubDate>Fri, 26 Nov 2021 13:06:19 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2021/11/a-critique-of-ansi-sql-isolation-levels/</guid>
      <description>读A Critique of ANSI SQL Isolation Levels论文</description>
    </item>
    
    <item>
      <title>Alluxio论文</title>
      <link>https://code0xff.org/post/2021/11/alluxio%E8%AE%BA%E6%96%87/</link>
      <pubDate>Mon, 22 Nov 2021 12:32:17 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2021/11/alluxio%E8%AE%BA%E6%96%87/</guid>
      <description>读Alluxio论文</description>
    </item>
    
    <item>
      <title>Spark论文</title>
      <link>https://code0xff.org/post/2021/11/spark%E8%AE%BA%E6%96%87/</link>
      <pubDate>Sat, 06 Nov 2021 08:49:11 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2021/11/spark%E8%AE%BA%E6%96%87/</guid>
      <description>读Spark论文</description>
    </item>
    
    <item>
      <title>LFU缓存</title>
      <link>https://code0xff.org/post/2021/11/lfu%E7%BC%93%E5%AD%98/</link>
      <pubDate>Wed, 03 Nov 2021 08:54:19 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2021/11/lfu%E7%BC%93%E5%AD%98/</guid>
      <description>设计一个LFU缓存</description>
    </item>
    
    <item>
      <title>N皇后</title>
      <link>https://code0xff.org/post/2021/10/n%E7%9A%87%E5%90%8E/</link>
      <pubDate>Thu, 21 Oct 2021 09:58:22 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2021/10/n%E7%9A%87%E5%90%8E/</guid>
      <description>著名的8皇后问题</description>
    </item>
    
    <item>
      <title>两个有序数组的中位数</title>
      <link>https://code0xff.org/post/2021/10/%E4%B8%A4%E4%B8%AA%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84%E7%9A%84%E4%B8%AD%E4%BD%8D%E6%95%B0/</link>
      <pubDate>Wed, 20 Oct 2021 12:34:12 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2021/10/%E4%B8%A4%E4%B8%AA%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84%E7%9A%84%E4%B8%AD%E4%BD%8D%E6%95%B0/</guid>
      <description>给定两个有序数组，如何在对数时间查找出其中位数？</description>
    </item>
    
    <item>
      <title>沸腾新十年(上)</title>
      <link>https://code0xff.org/post/2021/10/%E6%B2%B8%E8%85%BE%E6%96%B0%E5%8D%81%E5%B9%B4%E4%B8%8A/</link>
      <pubDate>Mon, 18 Oct 2021 19:33:17 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2021/10/%E6%B2%B8%E8%85%BE%E6%96%B0%E5%8D%81%E5%B9%B4%E4%B8%8A/</guid>
      <description>中国移动互联网的十年，上半部</description>
    </item>
    
    <item>
      <title>沸腾新十年(下)</title>
      <link>https://code0xff.org/post/2021/10/%E6%B2%B8%E8%85%BE%E6%96%B0%E5%8D%81%E5%B9%B4%E4%B8%8B/</link>
      <pubDate>Mon, 18 Oct 2021 19:33:17 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2021/10/%E6%B2%B8%E8%85%BE%E6%96%B0%E5%8D%81%E5%B9%B4%E4%B8%8B/</guid>
      <description>中国移动互联网的十年，下半部</description>
    </item>
    
    <item>
      <title>推荐一些不错的韩国电影</title>
      <link>https://code0xff.org/post/2021/10/%E6%8E%A8%E8%8D%90%E4%B8%80%E4%BA%9B%E4%B8%8D%E9%94%99%E7%9A%84%E9%9F%A9%E5%9B%BD%E7%94%B5%E5%BD%B1/</link>
      <pubDate>Sat, 16 Oct 2021 11:39:19 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2021/10/%E6%8E%A8%E8%8D%90%E4%B8%80%E4%BA%9B%E4%B8%8D%E9%94%99%E7%9A%84%E9%9F%A9%E5%9B%BD%E7%94%B5%E5%BD%B1/</guid>
      <description>推荐一些豆瓣评分很高的韩国电影，值得观看</description>
    </item>
    
    <item>
      <title>马拉车算法</title>
      <link>https://code0xff.org/post/2021/10/%E9%A9%AC%E6%8B%89%E8%BD%A6%E7%AE%97%E6%B3%95/</link>
      <pubDate>Sat, 16 Oct 2021 10:49:09 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2021/10/%E9%A9%AC%E6%8B%89%E8%BD%A6%E7%AE%97%E6%B3%95/</guid>
      <description>介绍马拉车算法，这是一种用在回文字符串场景下的算法，可以将时间复杂度压缩到极致</description>
    </item>
    
    <item>
      <title>多彩的黔东南</title>
      <link>https://code0xff.org/post/2021/10/%E5%A4%9A%E5%BD%A9%E7%9A%84%E9%BB%94%E4%B8%9C%E5%8D%97/</link>
      <pubDate>Sun, 10 Oct 2021 20:10:04 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2021/10/%E5%A4%9A%E5%BD%A9%E7%9A%84%E9%BB%94%E4%B8%9C%E5%8D%97/</guid>
      <description>贵州旅行游记</description>
    </item>
    
    <item>
      <title>从汇编角度看程序的执行</title>
      <link>https://code0xff.org/post/2021/10/%E4%BB%8E%E6%B1%87%E7%BC%96%E8%A7%92%E5%BA%A6%E7%9C%8B%E7%A8%8B%E5%BA%8F%E7%9A%84%E6%89%A7%E8%A1%8C/</link>
      <pubDate>Sun, 10 Oct 2021 14:09:03 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2021/10/%E4%BB%8E%E6%B1%87%E7%BC%96%E8%A7%92%E5%BA%A6%E7%9C%8B%E7%A8%8B%E5%BA%8F%E7%9A%84%E6%89%A7%E8%A1%8C/</guid>
      <description>分析一段程序的汇编代码，循环、函数调用、浮点执行等</description>
    </item>
    
    <item>
      <title>莫里斯遍历</title>
      <link>https://code0xff.org/post/2021/10/%E8%8E%AB%E9%87%8C%E6%96%AF%E9%81%8D%E5%8E%86/</link>
      <pubDate>Tue, 05 Oct 2021 14:09:03 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2021/10/%E8%8E%AB%E9%87%8C%E6%96%AF%E9%81%8D%E5%8E%86/</guid>
      <description>详解介绍莫里斯遍历，通过树中的空闲指针，极限压缩空间达到常数级别，本文介绍两种莫里斯版本，第一种是破坏性的；第二种是非破坏性的</description>
    </item>
    
    <item>
      <title>朝鲜之行</title>
      <link>https://code0xff.org/post/2021/10/%E6%9C%9D%E9%B2%9C%E4%B9%8B%E8%A1%8C/</link>
      <pubDate>Mon, 04 Oct 2021 11:10:04 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2021/10/%E6%9C%9D%E9%B2%9C%E4%B9%8B%E8%A1%8C/</guid>
      <description>神秘的朝鲜之旅</description>
    </item>
    
    <item>
      <title>日本之行</title>
      <link>https://code0xff.org/post/2021/10/%E6%97%A5%E6%9C%AC%E4%B9%8B%E8%A1%8C/</link>
      <pubDate>Sun, 03 Oct 2021 14:09:03 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2021/10/%E6%97%A5%E6%9C%AC%E4%B9%8B%E8%A1%8C/</guid>
      <description>游日本大阪、京都、东京</description>
    </item>
    
    <item>
      <title>丽江之行</title>
      <link>https://code0xff.org/post/2021/10/%E4%B8%BD%E6%B1%9F%E4%B9%8B%E8%A1%8C/</link>
      <pubDate>Sat, 02 Oct 2021 14:09:03 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2021/10/%E4%B8%BD%E6%B1%9F%E4%B9%8B%E8%A1%8C/</guid>
      <description>游丽江古城、大理洱海</description>
    </item>
    
    <item>
      <title>海边的亚庇</title>
      <link>https://code0xff.org/post/2021/10/%E6%B5%B7%E8%BE%B9%E7%9A%84%E4%BA%9A%E5%BA%87/</link>
      <pubDate>Fri, 01 Oct 2021 14:09:03 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2021/10/%E6%B5%B7%E8%BE%B9%E7%9A%84%E4%BA%9A%E5%BA%87/</guid>
      <description>马来西亚,亚庇</description>
    </item>
    
    <item>
      <title>多瑙河畔的布达佩斯</title>
      <link>https://code0xff.org/post/2021/09/%E5%A4%9A%E7%91%99%E6%B2%B3%E7%95%94%E7%9A%84%E5%B8%83%E8%BE%BE%E4%BD%A9%E6%96%AF/</link>
      <pubDate>Thu, 30 Sep 2021 11:12:13 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2021/09/%E5%A4%9A%E7%91%99%E6%B2%B3%E7%95%94%E7%9A%84%E5%B8%83%E8%BE%BE%E4%BD%A9%E6%96%AF/</guid>
      <description>2018年8月份，我们去了匈牙利，当时我把游记写到了云笔记里面，现将云笔记的内容搬出来，变成博客，这篇记录的是布达佩斯的行程</description>
    </item>
    
    <item>
      <title>城中国梵蒂冈</title>
      <link>https://code0xff.org/post/2021/09/%E5%9F%8E%E4%B8%AD%E5%9B%BD%E6%A2%B5%E8%92%82%E5%86%88/</link>
      <pubDate>Wed, 29 Sep 2021 12:16:14 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2021/09/%E5%9F%8E%E4%B8%AD%E5%9B%BD%E6%A2%B5%E8%92%82%E5%86%88/</guid>
      <description>2018年8月份，我们去了意大利，当时我把游记写到了云笔记里面，现将云笔记的内容搬出来，变成博客，这篇记录的是梵蒂冈的行程</description>
    </item>
    
    <item>
      <title>永恒之城罗马</title>
      <link>https://code0xff.org/post/2021/09/%E6%B0%B8%E6%81%92%E4%B9%8B%E5%9F%8E%E7%BD%97%E9%A9%AC/</link>
      <pubDate>Tue, 28 Sep 2021 12:16:14 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2021/09/%E6%B0%B8%E6%81%92%E4%B9%8B%E5%9F%8E%E7%BD%97%E9%A9%AC/</guid>
      <description>2018年8月份，我们去了意大利，当时我把游记写到了云笔记里面，现将云笔记的内容搬出来，变成博客，这篇记录的是罗马的行程</description>
    </item>
    
    <item>
      <title>微服务的设计的IDEALS</title>
      <link>https://code0xff.org/post/2021/09/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E7%9A%84%E8%AE%BE%E8%AE%A1%E7%9A%84ideals/</link>
      <pubDate>Mon, 27 Sep 2021 18:34:37 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2021/09/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E7%9A%84%E8%AE%BE%E8%AE%A1%E7%9A%84ideals/</guid>
      <description>微服务的设计的IDEALS</description>
    </item>
    
    <item>
      <title>水上的威尼斯(下)</title>
      <link>https://code0xff.org/post/2021/09/%E6%B0%B4%E4%B8%8A%E7%9A%84%E5%A8%81%E5%B0%BC%E6%96%AF_2/</link>
      <pubDate>Mon, 27 Sep 2021 12:07:04 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2021/09/%E6%B0%B4%E4%B8%8A%E7%9A%84%E5%A8%81%E5%B0%BC%E6%96%AF_2/</guid>
      <description>2018年8月份，我们去了意大利，当时我把游记写到了云笔记里面，现将云笔记的内容搬出来，变成博客，这篇记录的是威尼斯的行程，由于内部比较多，我分成了上下两篇，这篇是下部</description>
    </item>
    
    <item>
      <title>水上的威尼斯(上)</title>
      <link>https://code0xff.org/post/2021/09/%E6%B0%B4%E4%B8%8A%E7%9A%84%E5%A8%81%E5%B0%BC%E6%96%AF_1/</link>
      <pubDate>Mon, 27 Sep 2021 11:06:04 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2021/09/%E6%B0%B4%E4%B8%8A%E7%9A%84%E5%A8%81%E5%B0%BC%E6%96%AF_1/</guid>
      <description>2018年8月份，我们去了意大利，当时我把游记写到了云笔记里面，现将云笔记的内容搬出来，变成博客，这篇记录的是威尼斯的行程，由于内部比较多，我分成了上下两篇，这篇是上部</description>
    </item>
    
    <item>
      <title>开发软件为啥这么难</title>
      <link>https://code0xff.org/post/2021/09/%E5%BC%80%E5%8F%91%E8%BD%AF%E4%BB%B6%E4%B8%BA%E5%95%A5%E8%BF%99%E4%B9%88%E9%9A%BE/</link>
      <pubDate>Wed, 22 Sep 2021 15:28:13 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2021/09/%E5%BC%80%E5%8F%91%E8%BD%AF%E4%BB%B6%E4%B8%BA%E5%95%A5%E8%BF%99%E4%B9%88%E9%9A%BE/</guid>
      <description>开发软件为啥这么难</description>
    </item>
    
    <item>
      <title>曾经搭建博客的过程</title>
      <link>https://code0xff.org/post/2021/09/%E6%9B%BE%E7%BB%8F%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E7%9A%84%E8%BF%87%E7%A8%8B/</link>
      <pubDate>Wed, 22 Sep 2021 14:58:33 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2021/09/%E6%9B%BE%E7%BB%8F%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E7%9A%84%E8%BF%87%E7%A8%8B/</guid>
      <description>第一次搭建博客的记录</description>
    </item>
    
    <item>
      <title>第一篇文章</title>
      <link>https://code0xff.org/post/2021/09/%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/</link>
      <pubDate>Wed, 22 Sep 2021 13:58:33 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2021/09/%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/</guid>
      <description>用hugo+github+gitee搭建的博客</description>
    </item>
    
    <item>
      <title></title>
      <link>https://code0xff.org/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://code0xff.org/about/</guid>
      <description>网站介绍</description>
    </item>
    
    <item>
      <title></title>
      <link>https://code0xff.org/archives/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://code0xff.org/archives/</guid>
      <description>文章归档</description>
    </item>
    
    <item>
      <title></title>
      <link>https://code0xff.org/linked/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://code0xff.org/linked/</guid>
      <description>链接结果</description>
    </item>
    
    <item>
      <title>搜索</title>
      <link>https://code0xff.org/search/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://code0xff.org/search/</guid>
      <description>搜索结果</description>
    </item>
    
  </channel>
</rss>
