<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>数据库 on 记录每个瞬间</title>
    <link>https://code0xff.org/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/</link>
    <description>Recent content in 数据库 on 记录每个瞬间</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Wed, 01 Feb 2023 07:35:19 +0800</lastBuildDate><atom:link href="https://code0xff.org/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Implementing Database Operations Using SIMD Instructions</title>
      <link>https://code0xff.org/post/2023/02/implementing-database-operations-using-simd-instructions/</link>
      <pubDate>Wed, 01 Feb 2023 07:35:19 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2023/02/implementing-database-operations-using-simd-instructions/</guid>
      <description>介绍了SIMD指令一些基本概念，并行流水线，以及分支预测失败带来的影响；论文中提到了使用SIMD指令的方式，以及不同平台产生的差异；之后用伪代码的方式描述几个数据库常用操作；scan操作详细对比了标量版和SIMD版的区别，以及如何消除分支的方式，还有返回选中的一个元素、多个元素的标量、SIMD方式；聚合的实现方式SIMD有提供相关的操作 SIMD_min、SIMD_max即可，对于索引部分主要是介绍树结构索引，详细讨论了中间节点、叶子节点的实现方式；在有序元素上使用二分效率是非常高的，但也会有分支预测失败问题，论文中给出了混合二分+顺序扫描方式；最后是join处理方式，这里只列出了nested-loop join的SIMD实现，Duplicate-outer、Duplicate-inner、Rotate-inner</description>
    </item>
    
    <item>
      <title>Rethinking SIMD Vectorization for In-Memory Databases</title>
      <link>https://code0xff.org/post/2023/01/rethinking-simd-vectorization-for-in-memory-databases/</link>
      <pubDate>Fri, 27 Jan 2023 10:35:19 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2023/01/rethinking-simd-vectorization-for-in-memory-databases/</guid>
      <description>这是Oracle联合哥伦比亚大学做的研究，论文中讨重点讨论了数据并行化(线程、指令、数据)，也就是SIMD实现；论文中给出了一些基本的SIMD操作，如selective sotre/load、gather、scatter，在论文发表的时候，这几个操作主流CPU不是全支持，只能通过一些模拟操作来支持，如permutation等；通过定义这四个最基本的操作，再往上就可以定义数据库查询中比较重要的操作了，如：scan、hash-table(horizontal、vertical、build、线性探测、double hash、cuckoo hash)、bloom filter、分区(radix、hash、range)；通过hash、分区等操作，又可以定义出排序、join等更复杂的操作，相当于是层层搭积木；测试结果SIMD会有大幅度性能提升，但也受到cache size的影响</description>
    </item>
    
    <item>
      <title>SIMD-Scan: Ultra Fast in-Memory Table Scan using onChip Vector Processing Units</title>
      <link>https://code0xff.org/post/2023/01/ultra-fast-in-memory-table-scan-using-onchip-vector-processing-units/</link>
      <pubDate>Thu, 19 Jan 2023 10:35:19 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2023/01/ultra-fast-in-memory-table-scan-using-onchip-vector-processing-units/</guid>
      <description>现代数据库由I/O瓶颈转向了CPU瓶颈，利用多核能力加速全表扫描，但是向量化的能力没能充分发挥。使用向量化包括：内嵌汇编、硬件厂商提供的跨平台库函数、编译器指示符、编译器自动优化，每种都是可用性和可控性之间的权衡。论文中引入了两项优化：使用SIMD方式在寄存器中解压 轻量压缩数据(使用concatenate、shift、shuffle、mark等指令完成)；使用SIMD完成等值和范围查找(使用掩码指令，将4个元素加载到寄存器中，再通过min、max比较范围，最后生成索引数组向量位)，通过测试结果都有大幅度提升，并且优化实现可以适用各种数据库</description>
    </item>
    
    <item>
      <title>Make the most out of your SIMD investments: counter control flow divergence in compiled query pipelines</title>
      <link>https://code0xff.org/post/2023/01/make-the-most-out-of-your-simd-investments/</link>
      <pubDate>Tue, 17 Jan 2023 06:35:19 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2023/01/make-the-most-out-of-your-simd-investments/</guid>
      <description>现代数据库很多都采用了向量化执行，也就是利用 SIMD 指令，SIMD指令在碰到分支时，会出现部分元素不满足条件，导致不活跃影响利用率吞吐量下降，论文中利用了 AVX512指令集的：mark指令、permute指令、compress、expand，来实现重填充算法和策略；包括：全消费策略(需增加寄存器，主要利用buffer)，以及部分消费策略(增加新寄存器，利用mark)，在能放入cache的场景中，这两种算法表现的都不错，是scalar的两倍，但对于复杂场景，以及cache放不下的场景则表现退化，另外如何设置 阈值也是一个开放问题</description>
    </item>
    
    <item>
      <title>Accelerating Analytics with Dynamic In-Memory Expressions</title>
      <link>https://code0xff.org/post/2023/01/accelerating-analytics-with-dynamic-in-memory-expressions/</link>
      <pubDate>Fri, 13 Jan 2023 14:05:19 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2023/01/accelerating-analytics-with-dynamic-in-memory-expressions/</guid>
      <description>Oracle12推出了混合行/列的存储格式，磁盘(buffer pool)中按列存储，内存中按列存储加速OLAP场景；而表达式求值在很多场景下是黑盒，不易监控、也占用资源，Oracle捕获了频繁使用的表达式，将表达式物化到内存中，然后在查询计划中，根据代价来改变查询计划，将原始的查询计划的子树，替换为内存中的物化表达式，在OLAP场景中大幅度提升性能，在混合OLTP场景中也非常有效</description>
    </item>
    
    <item>
      <title>Materialization Strategies in the Vertica Analytic Database: Lessons Learned</title>
      <link>https://code0xff.org/post/2023/01/materialization-strategies-in-the-vertica-analytic-database-lessons-learned/</link>
      <pubDate>Sat, 07 Jan 2023 20:05:19 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2023/01/materialization-strategies-in-the-vertica-analytic-database-lessons-learned/</guid>
      <description>列存数据库会通过物化的方式来重建tuple，包括早期物化EM、延迟物化LM，延迟物化的性能更好，但实现更难，当出现join溢出时会出现，此时会退回到早期物化；论文在早期物化基础上增加了：边信息传递SIP技术，并给出了实现细节，如何创建SIP，如何做push down；使用EM+SIP技术，比原始的EM性能大幅度提升，并且在很多场景下比延迟物化LM性能更好</description>
    </item>
    
    <item>
      <title>MonetDB/X100: Hyper-Pipelining Query Execution</title>
      <link>https://code0xff.org/post/2023/01/monetdbx100-hyper-pipelining-query-execution/</link>
      <pubDate>Thu, 05 Jan 2023 10:35:19 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2023/01/monetdbx100-hyper-pipelining-query-execution/</guid>
      <description>2005年的一篇论文，通过分析MySQL、MonetDB发现这两种没有达到硬件上的预期效果，MySQL是因为经典的火山模型导致编译器没法利用循环流水线，出现大量CPU等待；而MonetDB避免了上述情况但使用了物化，又导致大量的内存带宽拷贝；这篇论文结合了这两者的特点，选择了向量化的执行方式，并配合了合适的cache size，使得执行效率大幅度提升</description>
    </item>
    
    <item>
      <title>Access Path Selection in Main-Memory Optimized Data Systems Should I Scan or Should I Probe</title>
      <link>https://code0xff.org/post/2023/01/access-path-selection-in-main-memory-optimized-data-systems-should-i-scan-or-should-i-probe/</link>
      <pubDate>Tue, 03 Jan 2023 10:35:19 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2023/01/access-path-selection-in-main-memory-optimized-data-systems-should-i-scan-or-should-i-probe/</guid>
      <description>CMU Query Execution &amp;amp; Processing课程的一篇论文，现代分析系统中scan越来越重要，但二级索引依然有用，通过对比硬件参数、数据布局、压缩、并发等综合情况考虑之下，来选择：scan执行 或者index执行；通过性能评估发现，调节scan或者index并不是一个固定的值，而是根据不同的参数以及硬件情况，会动态变化的</description>
    </item>
    
    <item>
      <title>调试MySQL</title>
      <link>https://code0xff.org/post/2022/11/%E8%B0%83%E8%AF%95mysql/</link>
      <pubDate>Sun, 20 Nov 2022 08:35:19 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2022/11/%E8%B0%83%E8%AF%95mysql/</guid>
      <description>搭建一个MySQL调试环境</description>
    </item>
    
    <item>
      <title>CMU数据库总结</title>
      <link>https://code0xff.org/post/2022/11/cmu%E6%95%B0%E6%8D%AE%E5%BA%93%E6%80%BB%E7%BB%93/</link>
      <pubDate>Sun, 13 Nov 2022 19:35:19 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2022/11/cmu%E6%95%B0%E6%8D%AE%E5%BA%93%E6%80%BB%E7%BB%93/</guid>
      <description>基础部分、查询处理&amp;amp;优化、并发控制、事务和恢复、分布式数据库 总结思维导图</description>
    </item>
    
    <item>
      <title>Architecture of a Database System论文翻译</title>
      <link>https://code0xff.org/post/2022/09/architecture-of-a-database-system/</link>
      <pubDate>Sat, 03 Sep 2022 11:11:11 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2022/09/architecture-of-a-database-system/</guid>
      <description>Hellerstein、Michael Stonebraker、James Hamilton几位大神写的数据库系统架构</description>
    </item>
    
    <item>
      <title>确定要在DBMS中用mmap吗</title>
      <link>https://code0xff.org/post/2022/08/%E7%A1%AE%E5%AE%9A%E8%A6%81%E5%9C%A8dbms%E4%B8%AD%E7%94%A8mmap%E5%90%97/</link>
      <pubDate>Thu, 11 Aug 2022 19:08:19 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2022/08/%E7%A1%AE%E5%AE%9A%E8%A6%81%E5%9C%A8dbms%E4%B8%AD%E7%94%A8mmap%E5%90%97/</guid>
      <description>2022年 CIDR的一篇论文，CMU的网红教授发表的，介绍mmap的概念，以及为什么数据库不要用mmap</description>
    </item>
    
    <item>
      <title>为何Uber要将PostgreSQL迁到MySQL</title>
      <link>https://code0xff.org/post/2022/08/%E4%B8%BA%E4%BD%95uber%E8%A6%81%E5%B0%86postgresql%E8%BF%81%E5%88%B0mysql/</link>
      <pubDate>Mon, 08 Aug 2022 12:12:19 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2022/08/%E4%B8%BA%E4%BD%95uber%E8%A6%81%E5%B0%86postgresql%E8%BF%81%E5%88%B0mysql/</guid>
      <description>2016年的一篇文章，讲述了uber为什么要将PostgreSQL迁移到MySQL</description>
    </item>
    
    <item>
      <title>Kyuubi设计调研</title>
      <link>https://code0xff.org/post/2022/08/kyuubi%E8%AE%BE%E8%AE%A1%E8%B0%83%E7%A0%94/</link>
      <pubDate>Mon, 01 Aug 2022 12:12:19 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2022/08/kyuubi%E8%AE%BE%E8%AE%A1%E8%B0%83%E7%A0%94/</guid>
      <description>Kyuubi设计调研</description>
    </item>
    
    <item>
      <title>容灾部署调研</title>
      <link>https://code0xff.org/post/2022/07/%E5%AE%B9%E7%81%BE%E9%83%A8%E7%BD%B2%E8%B0%83%E7%A0%94/</link>
      <pubDate>Sat, 30 Jul 2022 14:32:19 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2022/07/%E5%AE%B9%E7%81%BE%E9%83%A8%E7%BD%B2%E8%B0%83%E7%A0%94/</guid>
      <description>容灾部署调研</description>
    </item>
    
    <item>
      <title>What&#39;s Really New with NewSQL论文</title>
      <link>https://code0xff.org/post/2022/07/whats-really-new-with-newsql%E8%AE%BA%E6%96%87/</link>
      <pubDate>Sun, 03 Jul 2022 20:32:19 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2022/07/whats-really-new-with-newsql%E8%AE%BA%E6%96%87/</guid>
      <description>What’s Really New with NewSQL? 论文 2016年发表在 sigmod上的</description>
    </item>
    
    <item>
      <title>HANA和TeraData数据库迁移调研</title>
      <link>https://code0xff.org/post/2021/11/hana%E5%92%8Cteradata%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%81%E7%A7%BB%E8%B0%83%E7%A0%94/</link>
      <pubDate>Fri, 26 Nov 2021 17:46:21 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2021/11/hana%E5%92%8Cteradata%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%81%E7%A7%BB%E8%B0%83%E7%A0%94/</guid>
      <description>调研HANA和TD的数据类型，各种语法，调研迁移的可能性</description>
    </item>
    
    <item>
      <title>TPC-DS</title>
      <link>https://code0xff.org/post/2021/11/tpc-ds/</link>
      <pubDate>Fri, 26 Nov 2021 17:46:21 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2021/11/tpc-ds/</guid>
      <description>TPC-DS的安装和测试</description>
    </item>
    
    <item>
      <title>A Critique of ANSI SQL Isolation Levels论文</title>
      <link>https://code0xff.org/post/2021/11/a-critique-of-ansi-sql-isolation-levels/</link>
      <pubDate>Fri, 26 Nov 2021 13:06:19 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2021/11/a-critique-of-ansi-sql-isolation-levels/</guid>
      <description>读A Critique of ANSI SQL Isolation Levels论文</description>
    </item>
    
  </channel>
</rss>
