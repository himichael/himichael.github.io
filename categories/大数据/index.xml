<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>大数据 on 记录每个瞬间</title>
    <link>https://code0xff.org/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/</link>
    <description>Recent content in 大数据 on 记录每个瞬间</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Wed, 23 Oct 2024 09:08:07 +0800</lastBuildDate><atom:link href="https://code0xff.org/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Spark的一些优化</title>
      <link>https://code0xff.org/post/2024/10/spark_optimize/</link>
      <pubDate>Wed, 23 Oct 2024 09:08:07 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2024/10/spark_optimize/</guid>
      <description>web-ui观察 executor指标：失败，shuffle，cache，CPU，内存，RDD数量，GC；stage关注 DAG，也是shuffle等数据，还有 Event Timeline。shuffle优化方式：增加并行度，group by变成局部聚合+全局聚合；转为 BHJ，大表 join 大表的 外表加盐，内表复制N份，再去盐gourp原始id，最后聚合；shuffle原理，HashShuffleManager(废除)，SortShuffleManager。 with 缓存优化，查询下推，自动倾斜join优化，LIMIT大数量优化，bucked join，4表join转为2个2个join增加并行度。RSS，向量化， AQE</description>
    </item>
    
    <item>
      <title>DataX和Canal相关</title>
      <link>https://code0xff.org/post/2024/10/datax_canal/</link>
      <pubDate>Tue, 22 Oct 2024 09:08:07 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2024/10/datax_canal/</guid>
      <description>DataX：读写插件，Job任务拆分，Task和Task Group，transform(filter，substr，replace，可自定义)，流控，脏数据，数据库冥等写入，ETL架构。Canal：Server（服务端-客户端模式，嵌入式模式），多个instance，包括：eventParser (数据源接入，模拟slave协议和master进行交互，协议解析)、eventSink (Parser和Store链接器，进行数据过滤，加工，分发的工作)、eventStore (数据存储)、metaManager (增量订阅&amp;amp;消费信息管理器)</description>
    </item>
    
    <item>
      <title>Kafka架构</title>
      <link>https://code0xff.org/post/2024/10/kafka_architecture/</link>
      <pubDate>Fri, 18 Oct 2024 09:08:07 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2024/10/kafka_architecture/</guid>
      <description>producer, broker, consumer，consumer group消费对应的partition数据，partition 包括多个 log segment，当一个达到阈值后，变成read only，再生成一个新的；每次都是head或者tail读，以及append写，速度很快，另外用了page cache会将数据写先到缓存再刷新；每个分区都有一个leader，副本只用于备份不做读写处理；副本如果能跟上leader就会放到 ISR集合中，ISR集合中最小的读确认offset 就是高水位，低水位是下次写的offset；producer 用 ack=0、1、all来表示副本节点是否接受了消息；ZK 后面迁移到了 Z-Raft 了，还有分层存储；kafka balance 是 NP问题，kafka connect，kafka streams；未来发展：完全基于云的kafka，用C++重写的kafka，数据存储在S3上的 statefulness 的kafka</description>
    </item>
    
    <item>
      <title>大数据上云</title>
      <link>https://code0xff.org/post/2024/10/bigdata_2_cloud/</link>
      <pubDate>Thu, 03 Oct 2024 09:08:07 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2024/10/bigdata_2_cloud/</guid>
      <description>大数据平台上云的问题：集群管控方式变了，YARN调度系统变了；安全性问题、DDos、数据治理问题；成本问题，计费策略；存储迁移，HDFS -&amp;gt; S3 语义的变化；多云高可用方案；混合云方案；适配其他业务线</description>
    </item>
    
    <item>
      <title>Parquet for Spark</title>
      <link>https://code0xff.org/post/2024/10/parquet_4_spark/</link>
      <pubDate>Wed, 02 Oct 2024 09:08:07 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2024/10/parquet_4_spark/</guid>
      <description>Spark执行Delta的过程，通过自定义的format格式，到DataFrameWriter.saveToV1Source，在是到DeltaDataSource#createRealation，写入做优化事务处理，再用FileFormatWriter创建多个Task并行写入，之后就是到Parquet内部执行阶段。Parquet包含Row Groups，往下是Column Chunk，再往下是Page，文件尾部包含Footer和一些元数据信息。Spark是按行写入的，一次写一行，每行写对应的 column。Parquet编码包括Dictionary Encoding、Run Length Encoding (RLE)、Delta Encoding。读取的主要类是VectorizedParquetRecordReader执行一批读取，调用VectorizedColumnReaders(对应每个column)，再调用VectorizedValuesReader(读取一个column中的一段数据)，返回由上层应用消费 。</description>
    </item>
    
    <item>
      <title>Spark-Streaming 原理</title>
      <link>https://code0xff.org/post/2024/09/spark_streaming/</link>
      <pubDate>Mon, 09 Sep 2024 09:08:07 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2024/09/spark_streaming/</guid>
      <description>spark streaming的基本原理，包括MicroBatchExecution，ContinuousExecution，通过IncrementalExecution + 状态实现micro-batch 并复用了spark 的所有查询逻辑；Source接口支持 getOffset，commit，可以自定义各种扩展实现；Sink包括：FileStreamSink、KafkaSink、DeltaSink、、ForeachBatchSink，ForeachWriteTable；Stateful将信息存如StateStoreRDD，保存到 HDFSBackedStateStoreProvider、RocksDBStateStoreProvider 中；Stream-Stream Join使用了StreamingSymmetricHashJoin，需要保证状态；Session Window同样也是通过插入一些流相关的算子 + 状态保存实现的</description>
    </item>
    
    <item>
      <title>Spark的 数据分布</title>
      <link>https://code0xff.org/post/2024/09/data_distribution/</link>
      <pubDate>Sun, 01 Sep 2024 09:08:07 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2024/09/data_distribution/</guid>
      <description>Distribution及相关类，Partitioning类，Partitioner类，排序的物理算子，UnsafeExternalSorter 和UnsafeInMemorySorter，spill和归并排序；shuffle操作，ShuffleDependency，ShuffleRowRDD，map端的ShuffleMapTasks，reduce端 ShuffleDependency 从shuffle manager 那里读取数据，拿到MapStauts 状态；ShuffleManager 包含了ShuffleWriter，ShuffleReader；BypassMergeSortShuffleWriter 、UnsafeShuffleWriter、SortShuffleWriter、、BlockStoreShuffleReader</description>
    </item>
    
    <item>
      <title>Trino架构</title>
      <link>https://code0xff.org/post/2024/04/trino_architecture/</link>
      <pubDate>Sun, 07 Apr 2024 09:08:07 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2024/04/trino_architecture/</guid>
      <description>三种角色：discovery、coordinate、worker；连接器的设计：Metadata SPI、Data Statistics SPI、Data Location SPI、Data Stream SPI；查询计划，物理计划和调度，Stage，split，page，driver；Dynamic filtering，Spill to disk，Table statistics，JOIN 策略，CBO，join order，Join pushdown</description>
    </item>
    
    <item>
      <title>Compaction in Apache Iceberg</title>
      <link>https://code0xff.org/post/2024/03/compaction-_in_apache_iceberg/</link>
      <pubDate>Thu, 29 Feb 2024 09:08:07 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2024/03/compaction-_in_apache_iceberg/</guid>
      <description>压缩，可以将多个小文件合并为大文件提高读性能，几种压缩策略：binpack（简单合并）、sort、z-order（适合多列查询），Expire Snapshots 可以删除过期的数据文件，还提供了参数可以自动删除manifest 文件、保留多少manifest文件，以及清除orphan 文件</description>
    </item>
    
    <item>
      <title>Copy-On-Write vs Merge-On-Read in Apache Iceberg</title>
      <link>https://code0xff.org/post/2024/03/cow_mor_iceberg/</link>
      <pubDate>Wed, 28 Feb 2024 09:08:07 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2024/03/cow_mor_iceberg/</guid>
      <description>Copy-On-Write适用的场景和优缺点，Merge-On-Read的 position deletes、equality deletes 原理，以及适用的场景，优缺点，如何选择COW和MOR，以及如何配置他们</description>
    </item>
    
    <item>
      <title>The Life of a Read/Write Query for Apache Iceberg Tables</title>
      <link>https://code0xff.org/post/2024/03/the_life_of_iceberg/</link>
      <pubDate>Mon, 26 Feb 2024 09:08:07 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2024/03/the_life_of_iceberg/</guid>
      <description>介绍了存储的结构，元数据层包括：manifest files、manifest list, metadata files，catalog指向最新的 metadata files；每一层都可以做裁减，包括数据层，介绍了读取、time travel过程，是自上往下的读取和裁减过程；写入过程：插入、删除、merge过程，写 过程是自下而上的，通过 切换catalog指向，利用OCC控制并发，实现ACID</description>
    </item>
    
    <item>
      <title>Iceberg 简单总结</title>
      <link>https://code0xff.org/post/2024/02/icer_berg/</link>
      <pubDate>Sun, 25 Feb 2024 09:08:07 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2024/02/icer_berg/</guid>
      <description>branch 和 tag，schema、partition、sort order演化，快照的维护（合并，删除孤儿文件等），manifest list 和 manifest files 两级布局；Hive的问题以及iceberg的优化：list是O(1)的，细粒度的partition，OCC，并发冲突，单节点的plan；Hidden partitioning，Time travelVersion rollback。支持：Spark、Flink、Hive、Trino、ClickHouse、Presto、Dremio、starrocks、Athena、EMR、Impala、Dori</description>
    </item>
    
    <item>
      <title>Data Ingestion: Tool Selection Strategy</title>
      <link>https://code0xff.org/post/2024/02/data_ingestion_tool-selection-strategy/</link>
      <pubDate>Mon, 19 Feb 2024 09:08:07 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2024/02/data_ingestion_tool-selection-strategy/</guid>
      <description>1、工具选择标准：策略标准、定价标准、数据功能、数据源/目标、数据契约； 工具偏好：批加载、CDC、连接器、基于代码； 3、摄取工具选择策略</description>
    </item>
    
    <item>
      <title>YARN 简单总结</title>
      <link>https://code0xff.org/post/2024/03/yarn_summary/</link>
      <pubDate>Sun, 11 Feb 2024 09:08:07 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2024/03/yarn_summary/</guid>
      <description>YARN 的简单使用总结</description>
    </item>
    
    <item>
      <title>Data Ingestion: Architectural Patterns</title>
      <link>https://code0xff.org/post/2024/01/data_ingestion_architectural_patterns/</link>
      <pubDate>Mon, 15 Jan 2024 09:08:07 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2024/01/data_ingestion_architectural_patterns/</guid>
      <description>data ingestion 的几种架构：Unified Data Repository、Data Virtualization、ETL、ELT、Stream Processing</description>
    </item>
    
    <item>
      <title>Hive MetaStore的实现和优化</title>
      <link>https://code0xff.org/post/2024/01/hms/</link>
      <pubDate>Sun, 14 Jan 2024 09:08:07 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2024/01/hms/</guid>
      <description>Hive MetaStore的实现原理，Hive Thrift 客户端和服务端的实现，MetaCat对 HMS 的兼容以及优化，Spark调用 HMS 的逻辑</description>
    </item>
    
    <item>
      <title>Analyzing and Comparing Lakehouse Storage Systems</title>
      <link>https://code0xff.org/post/2024/01/lakehouse_storage_systems/</link>
      <pubDate>Wed, 10 Jan 2024 09:08:07 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2024/01/lakehouse_storage_systems/</guid>
      <description>讨论了 LakeHouse 系统设计的难点，在不可变高延迟的对象存储之上，增加事务特性，三大系统都使用了OCC做隔离，事务实现都用了MVCC，源数据库管理delta和hudi用了表格式，iceberg用了层次存储(单节点处理)，数据更新三者都支持CoW(适合读多写少场景)，hudi和iceberg支持MoR(适合写多的场景)</description>
    </item>
    
    <item>
      <title>Doris Advanced</title>
      <link>https://code0xff.org/post/2024/01/doris_advanced/</link>
      <pubDate>Fri, 05 Jan 2024 09:08:07 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2024/01/doris_advanced/</guid>
      <description>Pipeline Execution Engine, Nereids-the Brand New Planner, High-Concurrency Point Query, Materialized View, Statistics, Join Optimization.  Multi-catalog, Spark Doris Connector, Other Connector, Plugin Development Manual, CloudCanal Data Import, DBT Doris Adapter, UDF, cluster management, Data Admin, Other Manager, Maintenance and Monitor, Metadata Operations and Maintenance</description>
    </item>
    
    <item>
      <title>Doris Basic</title>
      <link>https://code0xff.org/post/2024/01/doris/</link>
      <pubDate>Fri, 05 Jan 2024 09:08:07 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2024/01/doris/</guid>
      <description>Introduce Doris,include: Data Model(Aggregate Model,Unique Model,Duplicate Model), Data Partition(Rollup),Index(Inverted Index,BloomFilter Index,NGram BloomFilter Index,Bitmap Index). Import Scenes,Import Way(Broker Load,Routine Load,Spark Load,Stream Load,MySql Load,S3 Load,Insert Into,Importing Data in JSON Format,Min Load Replica Num),Export,Update and Delete</description>
    </item>
    
    <item>
      <title>Impala Tuning Summary</title>
      <link>https://code0xff.org/post/2023/12/impala_tuning/</link>
      <pubDate>Fri, 01 Dec 2023 09:13:07 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2023/12/impala_tuning/</guid>
      <description>Impala Tuning, Architecture. tunning: join,statistics,cache,coordinators,web ui. admission control,administration configuration,security. SQL Statements and Data Type, built-in functions,udf, explain commands, file formats, Supported table and storage</description>
    </item>
    
    <item>
      <title>The History of Big data</title>
      <link>https://code0xff.org/post/2023/11/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%8E%86%E5%8F%B2/</link>
      <pubDate>Sun, 19 Nov 2023 09:13:07 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2023/11/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%8E%86%E5%8F%B2/</guid>
      <description>从谷歌的三篇论文到Hadoop的诞生，再是各种开源产品依次出现，Hive对MapReduce的易用性改进，三大Hadoop 供应商，谷歌新三篇论文诞生了交互式查询（三大供应商推出）以及各种开源存储格式，Spark的出现和各种流处理系统，Netflix也证明了云的强大，流批一体以及各种分布式调度系统，基于云的数仓产品出现，HDFS替换上云、容器化出现、全托管数仓Modern Data Stack、深度学习对Hadoop的影响，三大供应商被收购，三大开放表格存储的出现，几个元数据管理产品，几个新的调度框架，LakeHouse的出现以及相关类似云产品</description>
    </item>
    
    <item>
      <title>TPCx-HS优化总结</title>
      <link>https://code0xff.org/post/2023/11/tpcx-hs%E4%BC%98%E5%8C%96%E6%80%BB%E7%BB%93/</link>
      <pubDate>Thu, 09 Nov 2023 09:13:07 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2023/11/tpcx-hs%E4%BC%98%E5%8C%96%E6%80%BB%E7%BB%93/</guid>
      <description>TPCx-HS优化总结</description>
    </item>
    
    <item>
      <title>Gluten源码结构</title>
      <link>https://code0xff.org/post/2023/09/gluten%E6%BA%90%E7%A0%81%E7%BB%93%E6%9E%84/</link>
      <pubDate>Sun, 24 Sep 2023 09:13:07 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2023/09/gluten%E6%BA%90%E7%A0%81%E7%BB%93%E6%9E%84/</guid>
      <description>Spark向量化扩展 gluten 源码结构分析</description>
    </item>
    
    <item>
      <title>Ambari架构</title>
      <link>https://code0xff.org/post/2023/09/ambari/</link>
      <pubDate>Sat, 02 Sep 2023 09:13:07 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2023/09/ambari/</guid>
      <description>介绍 Ambari 的基本功能，依赖的其他开源组件，主要模块 Ambari-Server、Agent、web、metrics 的介绍</description>
    </item>
    
    <item>
      <title>Gluten和相关依赖</title>
      <link>https://code0xff.org/post/2023/08/gluten%E5%92%8C%E7%9B%B8%E5%85%B3%E4%BE%9D%E8%B5%96/</link>
      <pubDate>Sun, 27 Aug 2023 09:13:07 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2023/08/gluten%E5%92%8C%E7%9B%B8%E5%85%B3%E4%BE%9D%E8%B5%96/</guid>
      <description>对Spark性能增加的一个方案，将处理密集型数据部分的逻辑，由 JVM 交给 C++处理，Gluten只是一个胶水层，本身不做太多的事情，它将Spark的物理计划转为Substrait计划，然后序列化再转发给底层的向量化引擎，如Velox、ClickHouse等。对于不支持的算子会交给原生Spark处理，这种思路跟Databricks 发表的论文Photon是很类似的</description>
    </item>
    
    <item>
      <title>大数据采集</title>
      <link>https://code0xff.org/post/2023/07/%E6%95%B0%E6%8D%AE%E9%87%87%E9%9B%86/</link>
      <pubDate>Sun, 23 Jul 2023 09:13:07 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2023/07/%E6%95%B0%E6%8D%AE%E9%87%87%E9%9B%86/</guid>
      <description>总结一下大数据采集框架：Flumen、Fluentd、Sqoop、Datax、SeaTunel</description>
    </item>
    
    <item>
      <title>Presto在各大公司的应用</title>
      <link>https://code0xff.org/post/2023/07/presto%E5%9C%A8%E5%90%84%E5%A4%A7%E5%85%AC%E5%8F%B8%E7%9A%84%E5%BA%94%E7%94%A8/</link>
      <pubDate>Wed, 12 Jul 2023 09:11:07 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2023/07/presto%E5%9C%A8%E5%90%84%E5%A4%A7%E5%85%AC%E5%8F%B8%E7%9A%84%E5%BA%94%E7%94%A8/</guid>
      <description>Presto在 B站、字节跳动等 各大公司的应用</description>
    </item>
    
    <item>
      <title>Spark性能调优</title>
      <link>https://code0xff.org/post/2023/06/spark_tuning/</link>
      <pubDate>Fri, 30 Jun 2023 11:23:04 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2023/06/spark_tuning/</guid>
      <description>Spark性能调优</description>
    </item>
    
    <item>
      <title>资源隔离修改配置动态加载</title>
      <link>https://code0xff.org/post/2023/06/%E8%B5%84%E6%BA%90%E9%9A%94%E7%A6%BB%E4%BF%AE%E6%94%B9%E9%85%8D%E7%BD%AE%E5%8A%A8%E6%80%81%E5%8A%A0%E8%BD%BD/</link>
      <pubDate>Sun, 14 May 2023 11:23:04 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2023/06/%E8%B5%84%E6%BA%90%E9%9A%94%E7%A6%BB%E4%BF%AE%E6%94%B9%E9%85%8D%E7%BD%AE%E5%8A%A8%E6%80%81%E5%8A%A0%E8%BD%BD/</guid>
      <description>在资源隔离大功能的基础上，实现动态加载配置修改功能，当用户 alter 了资源配置表，会动态生效</description>
    </item>
    
    <item>
      <title>资源隔离设计</title>
      <link>https://code0xff.org/post/2023/06/%E8%B5%84%E6%BA%90%E9%9A%94%E7%A6%BB%E8%AE%BE%E8%AE%A1/</link>
      <pubDate>Sat, 13 May 2023 11:23:04 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2023/06/%E8%B5%84%E6%BA%90%E9%9A%94%E7%A6%BB%E8%AE%BE%E8%AE%A1/</guid>
      <description>基于高可用的两层调度方式，配合 k8s 实现一套资源隔离机制，并实现自定义的语法</description>
    </item>
    
    <item>
      <title>镜像合并&amp;配置文件同步</title>
      <link>https://code0xff.org/post/2023/06/%E9%95%9C%E5%83%8F%E5%90%88%E5%B9%B6%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E5%90%8C%E6%AD%A5/</link>
      <pubDate>Fri, 12 May 2023 11:23:04 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2023/06/%E9%95%9C%E5%83%8F%E5%90%88%E5%B9%B6%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E5%90%8C%E6%AD%A5/</guid>
      <description>将业务镜像和底层基础镜像合并，去掉spark的k8s模板配置文件，通过init容器 + env + volumn方式实现</description>
    </item>
    
    <item>
      <title>Photon A Fast Query Engine for Lakehouse Systems</title>
      <link>https://code0xff.org/post/2023/01/photon-a-fast-query-engine-for-lakehouse-systems/</link>
      <pubDate>Mon, 02 Jan 2023 10:35:19 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2023/01/photon-a-fast-query-engine-for-lakehouse-systems/</guid>
      <description>Databricks 2022年在SIGMOD上发表的论文(最佳工业论文奖)，由于I/O方面有很多优化措施，而JVM的对向量化支持较差，之后用C++实现了向量化的执行引擎Photon，来实现进一步的性能提升；首先是从最底层scan开始替换，因为中间替换的代价较高，之后不断往上，直到某个算子Photon不能适配，则由列存转换为Spark的行存，退回到Spark执行，总体看性能可以提升好几倍</description>
    </item>
    
    <item>
      <title>MillWheel</title>
      <link>https://code0xff.org/post/2023/03/millwheel/</link>
      <pubDate>Fri, 18 Nov 2022 08:35:19 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2023/03/millwheel/</guid>
      <description>MillWheel: Fault-Tolerant Stream Processing at Internet Scale</description>
    </item>
    
    <item>
      <title>FlumeJava: Easy, Efficient Data-Parallel Pipelines</title>
      <link>https://code0xff.org/post/2022/11/flumejava%E8%AE%BA%E6%96%87/</link>
      <pubDate>Thu, 10 Nov 2022 08:35:19 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2022/11/flumejava%E8%AE%BA%E6%96%87/</guid>
      <description>FlumeJava论文:《FlumeJava: Easy, Efficient Data-Parallel Pipelines》翻译</description>
    </item>
    
    <item>
      <title>Apache Flink™: Stream and Batch Processing in a Single Engine</title>
      <link>https://code0xff.org/post/2022/11/flink%E8%AE%BA%E6%96%87/</link>
      <pubDate>Sat, 05 Nov 2022 09:35:19 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2022/11/flink%E8%AE%BA%E6%96%87/</guid>
      <description>Flink论文：《Apache Flink™: Stream and Batch Processing in a Single Engine》翻译</description>
    </item>
    
    <item>
      <title>高可用设计</title>
      <link>https://code0xff.org/post/2022/09/%E9%AB%98%E5%8F%AF%E7%94%A8%E8%AE%BE%E8%AE%A1/</link>
      <pubDate>Sun, 18 Sep 2022 12:12:19 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2022/09/%E9%AB%98%E5%8F%AF%E7%94%A8%E8%AE%BE%E8%AE%A1/</guid>
      <description>扩展spark thrift，变成两层调度</description>
    </item>
    
    <item>
      <title>Kyuubi设计调研</title>
      <link>https://code0xff.org/post/2022/08/kyuubi%E8%AE%BE%E8%AE%A1%E8%B0%83%E7%A0%94/</link>
      <pubDate>Mon, 01 Aug 2022 12:12:19 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2022/08/kyuubi%E8%AE%BE%E8%AE%A1%E8%B0%83%E7%A0%94/</guid>
      <description>Kyuubi设计调研</description>
    </item>
    
    <item>
      <title>Snowflake论文</title>
      <link>https://code0xff.org/post/2023/03/snowflake%E8%AE%BA%E6%96%87/</link>
      <pubDate>Sat, 02 Jul 2022 14:32:19 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2023/03/snowflake%E8%AE%BA%E6%96%87/</guid>
      <description>The Snowflake Elastic Data Warehouse 论文 2015年发表在 sigmod上的</description>
    </item>
    
    <item>
      <title>Spark SQL论文</title>
      <link>https://code0xff.org/post/2022/07/spark-sql%E8%AE%BA%E6%96%87/</link>
      <pubDate>Fri, 01 Jul 2022 20:45:19 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2022/07/spark-sql%E8%AE%BA%E6%96%87/</guid>
      <description>Spark SQL: Relational Data Processing in Spark 论文</description>
    </item>
    
    <item>
      <title>Delta Lake论文</title>
      <link>https://code0xff.org/post/2022/06/delta-lake%E8%AE%BA%E6%96%87/</link>
      <pubDate>Fri, 24 Jun 2022 21:45:19 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2022/06/delta-lake%E8%AE%BA%E6%96%87/</guid>
      <description>Delta Lake: High-Performance ACID Table Storage over Cloud Object Stores 论文</description>
    </item>
    
    <item>
      <title>自定义HiveServer设计</title>
      <link>https://code0xff.org/post/2022/06/%E8%87%AA%E5%AE%9A%E4%B9%89hiveserver%E8%AE%BE%E8%AE%A1/</link>
      <pubDate>Sun, 05 Jun 2022 09:43:19 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2022/06/%E8%87%AA%E5%AE%9A%E4%B9%89hiveserver%E8%AE%BE%E8%AE%A1/</guid>
      <description>实现一套自己定义的Hive RPC服务</description>
    </item>
    
    <item>
      <title>BigTable论文</title>
      <link>https://code0xff.org/post/2023/03/bigtable%E8%AE%BA%E6%96%87/</link>
      <pubDate>Wed, 20 Apr 2022 20:43:19 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2023/03/bigtable%E8%AE%BA%E6%96%87/</guid>
      <description>BigTable论文</description>
    </item>
    
    <item>
      <title>MapReduce论文</title>
      <link>https://code0xff.org/post/2022/04/mapreduce%E8%AE%BA%E6%96%87/</link>
      <pubDate>Wed, 20 Apr 2022 12:43:19 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2022/04/mapreduce%E8%AE%BA%E6%96%87/</guid>
      <description>MapReduce论文</description>
    </item>
    
    <item>
      <title>GFS论文</title>
      <link>https://code0xff.org/post/2022/04/gfs%E8%AE%BA%E6%96%87/</link>
      <pubDate>Wed, 13 Apr 2022 08:54:19 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2022/04/gfs%E8%AE%BA%E6%96%87/</guid>
      <description>读GFS论文</description>
    </item>
    
    <item>
      <title>MapRedue是一个巨大的退步</title>
      <link>https://code0xff.org/post/2022/03/mapredue%E6%98%AF%E4%B8%80%E4%B8%AA%E5%B7%A8%E5%A4%A7%E7%9A%84%E9%80%80%E6%AD%A5/</link>
      <pubDate>Sat, 26 Mar 2022 11:38:31 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2022/03/mapredue%E6%98%AF%E4%B8%80%E4%B8%AA%E5%B7%A8%E5%A4%A7%E7%9A%84%E9%80%80%E6%AD%A5/</guid>
      <description>2008年的一篇文章，著名数据库专家抨击MapReduce相比数据库是巨大退步</description>
    </item>
    
    <item>
      <title>Hive论文</title>
      <link>https://code0xff.org/post/2022/03/hive%E8%AE%BA%E6%96%87/</link>
      <pubDate>Sun, 20 Mar 2022 08:54:37 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2022/03/hive%E8%AE%BA%E6%96%87/</guid>
      <description>Hive论文</description>
    </item>
    
    <item>
      <title>Spark逻辑计划的解析</title>
      <link>https://code0xff.org/post/2022/03/spark%E9%80%BB%E8%BE%91%E8%AE%A1%E5%88%92%E7%9A%84%E8%A7%A3%E6%9E%90/</link>
      <pubDate>Sun, 06 Mar 2022 11:20:43 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2022/03/spark%E9%80%BB%E8%BE%91%E8%AE%A1%E5%88%92%E7%9A%84%E8%A7%A3%E6%9E%90/</guid>
      <description>介绍spark是如何做逻辑计划解析，并优化的</description>
    </item>
    
    <item>
      <title>Spark的注入规则</title>
      <link>https://code0xff.org/post/2022/03/spark%E7%9A%84%E6%B3%A8%E5%85%A5%E8%A7%84%E5%88%99/</link>
      <pubDate>Fri, 04 Mar 2022 21:46:12 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2022/03/spark%E7%9A%84%E6%B3%A8%E5%85%A5%E8%A7%84%E5%88%99/</guid>
      <description>扩展Spark的注入规则，实现updaet</description>
    </item>
    
    <item>
      <title>Kudu论文翻译</title>
      <link>https://code0xff.org/post/2022/02/kudu%E8%AE%BA%E6%96%87%E7%BF%BB%E8%AF%91/</link>
      <pubDate>Sun, 20 Feb 2022 10:27:11 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2022/02/kudu%E8%AE%BA%E6%96%87%E7%BF%BB%E8%AF%91/</guid>
      <description>读Kudu论文</description>
    </item>
    
    <item>
      <title>Kudu的模型设计</title>
      <link>https://code0xff.org/post/2022/02/kudu%E7%9A%84%E6%A8%A1%E5%9E%8B%E8%AE%BE%E8%AE%A1/</link>
      <pubDate>Sun, 13 Feb 2022 14:28:17 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2022/02/kudu%E7%9A%84%E6%A8%A1%E5%9E%8B%E8%AE%BE%E8%AE%A1/</guid>
      <description>关于kudu的数据模型</description>
    </item>
    
    <item>
      <title>几种开源数据库对元数据的管理</title>
      <link>https://code0xff.org/post/2022/01/%E5%87%A0%E7%A7%8D%E5%BC%80%E6%BA%90%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AF%B9%E5%85%83%E6%95%B0%E6%8D%AE%E7%9A%84%E7%AE%A1%E7%90%86/</link>
      <pubDate>Tue, 25 Jan 2022 18:17:22 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2022/01/%E5%87%A0%E7%A7%8D%E5%BC%80%E6%BA%90%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AF%B9%E5%85%83%E6%95%B0%E6%8D%AE%E7%9A%84%E7%AE%A1%E7%90%86/</guid>
      <description>几种开源数据库对元数据的管理</description>
    </item>
    
    <item>
      <title>统一查询项目整合Calcite</title>
      <link>https://code0xff.org/post/2021/12/%E7%BB%9F%E4%B8%80%E6%9F%A5%E8%AF%A2%E6%95%B4%E5%90%88calcite/</link>
      <pubDate>Mon, 27 Dec 2021 13:07:19 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2021/12/%E7%BB%9F%E4%B8%80%E6%9F%A5%E8%AF%A2%E6%95%B4%E5%90%88calcite/</guid>
      <description>统一查询项目介绍</description>
    </item>
    
    <item>
      <title>统一查询项目介绍</title>
      <link>https://code0xff.org/post/2021/12/%E7%BB%9F%E4%B8%80%E6%9F%A5%E8%AF%A2%E9%A1%B9%E7%9B%AE%E4%BB%8B%E7%BB%8D/</link>
      <pubDate>Sun, 26 Dec 2021 13:07:19 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2021/12/%E7%BB%9F%E4%B8%80%E6%9F%A5%E8%AF%A2%E9%A1%B9%E7%9B%AE%E4%BB%8B%E7%BB%8D/</guid>
      <description>统一查询项目介绍</description>
    </item>
    
    <item>
      <title>QuickSQL执行过程</title>
      <link>https://code0xff.org/post/2021/12/quicksql%E6%89%A7%E8%A1%8C%E8%BF%87%E7%A8%8B/</link>
      <pubDate>Sun, 26 Dec 2021 13:06:19 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2021/12/quicksql%E6%89%A7%E8%A1%8C%E8%BF%87%E7%A8%8B/</guid>
      <description>quick-sql 原理分析</description>
    </item>
    
    <item>
      <title>Alluxio论文</title>
      <link>https://code0xff.org/post/2021/11/alluxio%E8%AE%BA%E6%96%87/</link>
      <pubDate>Mon, 22 Nov 2021 12:32:17 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2021/11/alluxio%E8%AE%BA%E6%96%87/</guid>
      <description>读Alluxio论文</description>
    </item>
    
    <item>
      <title>Spark论文</title>
      <link>https://code0xff.org/post/2021/11/spark%E8%AE%BA%E6%96%87/</link>
      <pubDate>Sat, 06 Nov 2021 08:49:11 +0800</pubDate>
      
      <guid>https://code0xff.org/post/2021/11/spark%E8%AE%BA%E6%96%87/</guid>
      <description>读Spark论文</description>
    </item>
    
  </channel>
</rss>
